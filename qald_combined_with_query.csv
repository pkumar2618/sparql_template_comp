qald_version,split,question_id,sentence_en,query
qald-9,train,1,List all boardgames by GMT.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games }'}
qald-9,train,2,Who developed Skype?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Skype dbo:developer ?uri. }'}
qald-9,train,3,Which people were born in Heraklion?,{'sparql': 'PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX onto: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Person ; onto:birthPlace <http://dbpedia.org/resource/Heraklion>. }'}
qald-9,train,4,In which U.S. state is Area 51 located?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Area_51 dbo:location ?uri . ?uri dbo:country res:United_States. }'}
qald-9,train,5,Who is the mayor of New York City?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:New_York_City dbo:leaderName ?uri }'}
qald-9,train,6,Which countries have places with more than two caves?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?cave rdf:type dbo:Cave ; dbo:location ?uri . ?uri rdf:type dbo:Country } GROUP BY ?uri HAVING ( COUNT(?cave) > 2 )'}
qald-9,train,7,Where did Abraham Lincoln die?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri. }'}
qald-9,train,8,Which airports does Air China serve?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Air_China dbo:targetAirport ?uri }'}
qald-9,train,9,Give me all actors starring in movies directed by and starring William Shatner.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring res:William_Shatner { ?x dbo:starring ?uri } UNION { ?x dbp:starring ?uri } }'}
qald-9,train,10,What are the official languages of the Philippines?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Philippines dbo:officialLanguage ?uri }'}
qald-9,train,11,Give me all Danish films.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:country res:Denmark }'}
qald-9,train,12,Which movies starring Brad Pitt were directed by Guy Ritchie?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Brad_Pitt ; dbo:director res:Guy_Ritchie }'}
qald-9,train,13,Give me the grandchildren of Bruce Lee.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bruce_Lee dbo:child ?child . ?child <http://dbpedia.org/property/children> ?uri }'}
qald-9,train,14,Which other weapons did the designer of the Uzi develop?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Weapon ; dbp:designer ?x . res:Uzi dbp:designer ?x FILTER ( ?uri != res:Uzi ) }'}
qald-9,train,15,Who is the owner of Universal Studios?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Universal_Studios dbo:owner ?uri }'}
qald-9,train,16,Which state of the USA has the highest population density?,{'sparql': 'PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:densityrank ?rank } ORDER BY ASC(?rank) LIMIT 1'}
qald-9,train,17,Which monarchs were married to a German?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Monarch ; dbo:spouse ?spouse { ?spouse dbo:birthPlace res:Germany } UNION { ?spouse dbo:birthPlace ?p . ?p dbo:country res:Germany } }'}
qald-9,train,18,Which organizations were founded in 1950?,"{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, ""^1950"") }'}"
qald-9,train,19,Who created the comic Captain America?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Captain_America dbo:creator ?uri }'}
qald-9,train,20,Give me the Apollo 14 astronauts.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:mission res:Apollo_14 }'}
qald-9,train,21,Who wrote the book The pillars of the Earth?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }'}
qald-9,train,22,Which state of the United States of America has the highest density?,{'sparql': 'PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1'}
qald-9,train,23,Which spaceflights were launched from Baikonur?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/launchPad> res:Baikonur_Cosmodrome }'}
qald-9,train,24,Give me a list of all trumpet players that were bandleaders.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Bandleader ; dbo:instrument res:Trumpet }'}
qald-9,train,25,Which U.S. states are in the same timezone as Utah?,{'sparql': 'PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Utah dbp:timezone ?x . ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:timezone ?x FILTER ( ?uri != res:Utah ) }'}
qald-9,train,26,Which U.S. states possess gold minerals?,"{'sparql': 'PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:mineral ?mineral FILTER regex(?mineral, ""gold"", ""i"") }'}"
qald-9,train,27,Who is the daughter of Ingrid Bergman married to?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ingrid_Bergman dbo:child ?child . ?child <http://dbpedia.org/property/spouse> ?uri }'}
qald-9,train,28,How deep is Lake Placid?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Lake_Placid_(Texas)> dbo:maximumDepth ?n }'}
qald-9,train,29,Show me all museums in London.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Museum> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/London> }'}
qald-9,train,30,Which caves have more than 3 entrances?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Cave> ; <http://dbpedia.org/property/entranceCount> ?entrance FILTER ( ?entrance > 3 ) }'}
qald-9,train,31,Who is the tallest player of the Atlanta Falcons?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Atlanta_Falcons> ; <http://dbpedia.org/ontology/height> ?h } ORDER BY DESC(?h) OFFSET 0 LIMIT 1'}
qald-9,train,32,What are the top-10 action role-playing video games according to IGN?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Action_role-playing_video_games> ; <http://dbpedia.org/property/ign> ?score } ORDER BY DESC(?score) LIMIT 10'}
qald-9,train,33,Give me all writers that won the Nobel Prize in literature.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> }'}
qald-9,train,34,Show me all basketball players that are higher than 2 meters.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > 2.0 ) }'}
qald-9,train,35,When was the Statue of Liberty built?,{'sparql': 'SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Statue_of_Liberty> <http://dbpedia.org/property/beginningDate> ?date }'}
qald-9,train,36,Which states border Illinois?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Illinois> <http://dbpedia.org/property/borderingstates> ?uri }'}
qald-9,train,37,Who developed Minecraft?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Minecraft> <http://dbpedia.org/ontology/developer> ?uri }'}
qald-9,train,38,Where did Hillel Slovak die?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hillel_Slovak> <http://dbpedia.org/ontology/deathPlace> ?uri }'}
qald-9,train,39,What movies does Jesse Eisenberg play in?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> }'}
qald-9,train,40,Give all swimmers that were born in Moscow.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Swimmer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Moscow> }'}
qald-9,train,41,Give me all cosmonauts.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Astronaut> { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russia> } UNION { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> } }'}
qald-9,train,42,Give me all Swiss non-profit organizations.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Switzerland> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> } }'}
qald-9,train,43,Which presidents were born in 1945?,"{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/President> ; <http://dbpedia.org/ontology/birthDate> ?date FILTER regex(?date, ""^1945"") }'}"
qald-9,train,44,What kind of music did Lou Reed play?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri }'}
qald-9,train,45,Where do the Red Sox play?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boston_Red_Sox> <http://dbpedia.org/property/ballpark> ?uri }'}
qald-9,train,46,Show a list of soccer clubs that play in the Bundesliga.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Bundesliga> }'}
qald-9,train,47,Which volcanos in Japan erupted since 2000?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Japan> ; <http://dbpedia.org/ontology/eruptionYear> ?date FILTER ( year(?date) >= 2000 ) }'}
qald-9,train,48,Which bridges cross the Seine?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Bridge> ; <http://dbpedia.org/ontology/crosses> <http://dbpedia.org/resource/Seine> }'}
qald-9,train,49,What is the official color of the University of Oxford?,{'sparql': 'SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/University_of_Oxford> <http://dbpedia.org/ontology/officialSchoolColour> ?string }'}
qald-9,train,50,How many films did Hal Roach produce?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> }'}
qald-9,train,51,Give me all Danish movies.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> }'}
qald-9,train,52,What is the most frequent cause of death?,{'sparql': 'SELECT DISTINCT ?x WHERE { ?uri <http://dbpedia.org/ontology/deathCause> ?x . } ORDER BY DESC(COUNT(DISTINCT ?uri)) OFFSET 0 LIMIT 1'}
qald-9,train,53,Who are the four youngest MVP basketball players?,"{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/birthDate> ?date ; <http://dbpedia.org/property/highlights> ?h FILTER regex(?h, ""MVP"") } ORDER BY DESC(?date) OFFSET 0 LIMIT 4'}"
qald-9,train,54,Give me all companies in Munich.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Munich> } UNION { ?uri <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Munich> } UNION { ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Munich> } }'}
qald-9,train,55,Give me the capitals of all countries that the Himalayas run through.,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?country . ?country <http://dbpedia.org/ontology/capital> ?uri }'}
qald-9,train,56,How many movies did Park Chan-wook direct?,{'sparql': 'SELECT COUNT(DISTINCT ?uri AS ?uri) WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Park_Chan-wook> . }'}
qald-9,train,57,Which rivers flow into a German lake?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> . ?x <http://dbpedia.org/ontology/inflow> ?uri ; a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> }'}
qald-9,train,58,How many airlines are there?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Airline> }'}
qald-9,train,59,Give me all islands that belong to Japan.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Island> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> }'}
qald-9,train,60,How many inhabitants does Maribor have?,{'sparql': 'SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Maribor> <http://dbpedia.org/ontology/populationTotal> ?num }'}
qald-9,train,61,Give me all Apollo 14 astronauts.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/mission> <http://dbpedia.org/resource/Apollo_14> }'}
qald-9,train,62,Which companies have more than 1 million employees?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/numberOfEmployees> ?n } UNION { ?uri <http://dbpedia.org/property/numEmployees> ?n } FILTER ( ?n > 1000000 ) }'}
qald-9,train,63,In which films directed by Garry Marshall was Julia Roberts starring?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> ; <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> }'}
qald-9,train,64,Give me all soccer clubs in the Premier League.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Premier_League> }'}
qald-9,train,65,What is the highest place of the Urals?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ural_Mountains> <http://dbpedia.org/property/highest> ?uri }'}
qald-9,train,66,Who is the governor of Wyoming?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wyoming> <http://dbpedia.org/property/governor> ?uri }'}
qald-9,train,67,Where did the architect of the Eiffel Tower study?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eiffel_Tower> <http://dbpedia.org/ontology/architect> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri }'}
qald-9,train,68,Give me all world heritage sites designated within the past two years.,"{'sparql': ""SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WorldHeritageSite> . { ?uri <http://dbpedia.org/property/year> '2013'^^xsd:integer . } UNION { ?uri <http://dbpedia.org/property/year> '2014'^^xsd:integer . } }""}"
qald-9,train,69,Give me all actors who were born in Paris after 1950.,"{'sparql': ""SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . ?uri <http://dbpedia.org/ontology/birthDate> ?date . FILTER ( ?date >= xsd:dateTime('1950-12-31T00:00:00Z')) }""}"
qald-9,train,70,Which movies star both Liz Taylor and Richard Burton?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> }'}
qald-9,train,71,Give me all Australian nonprofit organizations.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }'}
qald-9,train,72,Which pope succeeded John Paul II?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_John_Paul_II> <http://dbpedia.org/property/successor> ?uri }'}
qald-9,train,73,Give me all ESA astronauts.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/property/type> <http://dbpedia.org/resource/European_Space_Agency> }'}
qald-9,train,74,Who was president of Pakistan in 1978?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/President_of_Pakistan> ; <http://dbpedia.org/property/years> 1978 }'}
qald-9,train,75,Who is the owner of Rolls-Royce?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rolls-Royce_Motors> <http://dbpedia.org/ontology/owner> ?uri }'}
qald-9,train,76,How many museums does Paris have?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Museum> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Paris> }'}
qald-9,train,77,Where was JFK assassinated?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/ontology/deathPlace> ?uri }'}
qald-9,train,78,Give me all federal chancellors of Germany.,"{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?uri <http://dbpedia.org/ontology/office> ""Chancellor of Germany"" } UNION { ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Chancellor_of_Germany> } }'}"
qald-9,train,79,Show me everyone who was born on Halloween.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?uri <http://dbpedia.org/ontology/birthDate> ?date } UNION { ?uri <http://dbpedia.org/property/birthDate> ?date } <http://dbpedia.org/resource/Halloween> <http://dbpedia.org/property/date> ?date }'}
qald-9,train,80,Which beer originated in Ireland?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Beer> ; <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Beer_in_Ireland> }'}
qald-9,train,81,To which countries does the Himalayan mountain system extend?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?uri }'}
qald-9,train,82,Which actors were born in Germany?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Actor> { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> } UNION { ?uri <http://dbpedia.org/ontology/birthPlace> ?place . ?place <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> } }'}
qald-9,train,83,How much carbs does peanut butter have?,{'sparql': 'SELECT DISTINCT ?carbs WHERE { <http://dbpedia.org/resource/Peanut_butter> <http://dbpedia.org/property/carbs> ?carbs }'}
qald-9,train,84,Who produced the most films?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?film <http://dbpedia.org/ontology/producer> ?uri . } ORDER BY DESC(COUNT(?film)) OFFSET 0 LIMIT 1'}
qald-9,train,85,How many employees does Google have?,{'sparql': 'SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Google> <http://dbpedia.org/ontology/numberOfEmployees> ?num }'}
qald-9,train,86,Give me all actors who were born in Berlin.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Actor> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Berlin> }'}
qald-9,train,87,Who created Goofy?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?uri }'}
qald-9,train,88,Which music albums contain the song Last Christmas?,"{'sparql': 'SELECT DISTINCT ?uri WHERE { ?single <http://dbpedia.org/ontology/album> ?uri ; <http://www.w3.org/2000/01/rdf-schema#label> ""Last Christmas""@en }'}"
qald-9,train,89,When was Alberta admitted as province?,{'sparql': 'SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Alberta> <http://dbpedia.org/property/admittancedate> ?date }'}
qald-9,train,90,How many missions does the Soyuz programme have?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/property/programme> <http://dbpedia.org/resource/Soyuz_programme> }'}
qald-9,train,91,Give me all the TV shows with Neil Patrick Harris.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Neil_Patrick_Harris> }'}
qald-9,train,92,When were the Hells Angels founded?,{'sparql': 'SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Hells_Angels> <http://dbpedia.org/property/founded> ?date }'}
qald-9,train,93,What is the net income of Apple?,{'sparql': 'SELECT DISTINCT ?ni WHERE { <http://dbpedia.org/resource/Apple_Inc.> <http://dbpedia.org/ontology/netIncome> ?ni }'}
qald-9,train,94,Give me all Swedish holidays.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Holiday> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> }'}
qald-9,train,95,In which city was the former Dutch queen Juliana buried?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juliana_of_the_Netherlands> <http://dbpedia.org/property/burialPlace> ?uri . ?uri a <http://dbpedia.org/ontology/Settlement> }'}
qald-9,train,96,List all the musicals with music by Leonard Bernstein.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Musical> ; <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Leonard_Bernstein> }'}
qald-9,train,97,Give me all companies in the advertising industry.,"{'sparql': 'SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Advertising> } UNION { ?uri <http://dbpedia.org/ontology/industry> ?industry FILTER regex(?industry, ""advertising"", ""i"") } }'}"
qald-9,train,98,What is the largest metropolitan area in Washington state?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Washington_(state)> <http://dbpedia.org/property/largestmetro> ?uri }'}
qald-9,train,99,Who killed John Lennon?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/property/conviction> <http://dbpedia.org/resource/Death_of_John_Lennon> }'}
qald-9,train,100,Which writers studied in Istanbul?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> { ?uri <http://dbpedia.org/ontology/almaMater> ?x } UNION { ?uri <http://dbpedia.org/ontology/education> ?x } { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Istanbul> } UNION { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Istanbul> } }'}
qald-9,train,101,Give me all Australian metalcore bands.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Band> ; <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Metalcore> { ?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/hometown> ?h . ?h <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }'}
qald-9,train,102,Which countries adopted the Euro?,"{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> } UNION { ?uri <http://dbpedia.org/property/currencyCode> ""EUR""@en } }'}"
qald-9,train,103,Give me all types of eating disorders.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/class/yago/WikicatEatingDisorders> }'}
qald-9,train,104,Was Marc Chagall a jew?,"{'sparql': 'ASK WHERE { <http://dbpedia.org/resource/Marc_Chagall> <http://dbpedia.org/property/ethnicity> ""Jewish""@en }'}"
qald-9,train,105,What was Brazil's lowest rank in the FIFA World Ranking?,{'sparql': 'SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Brazil_national_football_team> <http://dbpedia.org/property/fifaMin> ?n }'}
qald-9,train,106,How many films did Leonardo DiCaprio star in?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Leonardo_DiCaprio> }'}
qald-9,train,107,Was Margaret Thatcher a chemist?,{'sparql': 'ASK WHERE { <http://dbpedia.org/resource/Margaret_Thatcher> <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Chemist> }'}
qald-9,train,108,Which U.S. states are in the same time zone as Utah?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Utah> <http://dbpedia.org/property/timezone> ?x . ?uri a <http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates> ; <http://dbpedia.org/property/timezone> ?x FILTER ( ?uri != <http://dbpedia.org/resource/Utah> ) }'}
qald-9,train,109,Give me all books written by Danielle Steel.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Danielle_Steel> }'}
qald-9,train,110,Which country has the most official languages?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/property/officialLanguages> ?language . } ORDER BY DESC(COUNT(?language)) OFFSET 0 LIMIT 1'}
qald-9,train,111,What is the total amount of men and women serving in the FDNY?,{'sparql': 'SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/New_York_City_Fire_Department> <http://dbpedia.org/property/employees> ?num }'}
qald-9,train,112,Which actor played Chewbacca?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chewbacca> <http://dbpedia.org/ontology/portrayer> ?uri }'}
qald-9,train,113,Give me all libraries established earlier than 1400.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/property/established> ?year FILTER ( ?year < 1400 ) }'}
qald-9,train,114,Which programming languages were influenced by Perl?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> { ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Perl> } UNION { <http://dbpedia.org/resource/Perl> <http://dbpedia.org/ontology/influenced> ?uri } }'}
qald-9,train,115,In which U.S. state is Mount McKinley located?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_McKinley> dbo:wikiPageRedirects ?x . ?x <http://dbpedia.org/ontology/locatedInArea> ?uri. ?uri rdf:type yago:WikicatStatesOfTheUnitedStates }'}
qald-9,train,116,What airlines are part of the SkyTeam alliance?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airline> { ?uri <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/SkyTeam> } UNION { ?uri <http://dbpedia.org/ontology/Alliance> <http://dbpedia.org/resource/SkyTeam> } }'}
qald-9,train,117,Which ships were called after Benjamin Franklin?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/shipNamesake> <http://dbpedia.org/resource/Benjamin_Franklin> }'}
qald-9,train,118,Give me all Methodist politicians.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }'}
qald-9,train,119,What other books have been written by the author of The Fault in Our Stars?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?books WHERE { ?books dbo:author <http://dbpedia.org/resource/John_Green_(author)> }'}
qald-9,train,120,What is the highest mountain?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1'}
qald-9,train,121,Which poet wrote the most books?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Poet> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1'}
qald-9,train,122,Which programming languages influenced Javascript?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> ; <http://dbpedia.org/ontology/influenced> <http://dbpedia.org/resource/JavaScript> }'}
qald-9,train,123,Which musician wrote the most books?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musician> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1'}
qald-9,train,124,Which films starring Clint Eastwood did he direct himself?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Clint_Eastwood> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Clint_Eastwood> }'}
qald-9,train,125,Which software has been developed by organizations founded in California?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Software> . ?company a <http://dbpedia.org/ontology/Company> . ?uri <http://dbpedia.org/ontology/developer> ?company . ?company <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/California> }'}
qald-9,train,126,Which instruments does Cat Stevens play?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cat_Stevens> <http://dbpedia.org/ontology/instrument> ?uri }'}
qald-9,train,127,How many airlines are members of the Star Alliance?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Airline> ; <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/Star_Alliance> }'}
qald-9,train,128,Give me all actors called Baldwin.,"{'sparql': ""PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?uri WHERE { ?uri foaf:surname 'Baldwin'@en . { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Actor> . } UNION { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . } }""}"
qald-9,train,129,Who wrote The Hunger Games?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Hunger_Games> <http://dbpedia.org/property/author> ?uri }'}
qald-9,train,130,For which label did Elvis record his first album?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?x rdf:type dbo:Album ; dbo:artist res:Elvis_Presley ; dbo:releaseDate ?y ; dbo:recordLabel ?uri } ORDER BY ASC(?y) OFFSET 0 LIMIT 1'}
qald-9,train,131,Is Christian Bale starring in Batman Begins?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Batman_Begins dbo:starring res:Christian_Bale }'}
qald-9,train,132,Where is the residence of the prime minister of Spain?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/property/residence> ?uri }'}
qald-9,train,133,Which actor was casted in the most movies?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . ?f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?f <http://dbpedia.org/ontology/starring> ?uri . } ORDER BY DESC(COUNT(DISTINCT(?f))) OFFSET 0 LIMIT 1'}
qald-9,train,134,Which countries have more than two official languages?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/officialLanguage> ?language } GROUP BY ?uri HAVING ( COUNT(?language) > 2 )'}
qald-9,train,135,Which countries have more than ten caves?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> . ?cave a <http://dbpedia.org/ontology/Cave> { ?cave <http://dbpedia.org/ontology/location> ?uri } UNION { ?cave <http://dbpedia.org/ontology/location> ?loc . ?loc <http://dbpedia.org/ontology/country> ?uri } } GROUP BY ?uri HAVING ( COUNT(?cave) > 10 )'}
qald-9,train,136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"{'sparql': ""SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> . ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Bruce_Springsteen> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date . FILTER (?date >= '1980-01-01'^^xsd:date && ?date <= '1990-12-31'^^xsd:date) }""}"
qald-9,train,137,Which television shows were created by John Cleese?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> }'}
qald-9,train,138,When did Latvia join the EU?,{'sparql': 'SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Latvia> <http://dbpedia.org/property/accessioneudate> ?date }'}
qald-9,train,139,Which soccer players were born on Malta?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerPlayer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Malta> }'}
qald-9,train,140,How many politicians graduated from Columbia University?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> ; <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Columbia_University> }'}
qald-9,train,141,Give me the birthdays of all actors of the television show Charmed.,{'sparql': 'SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date }'}
qald-9,train,142,Which telecommunications organizations are located in Belgium?,"{'sparql': 'SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Organisation> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Telecommunication> } UNION { ?uri <http://dbpedia.org/property/industry> ?industry FILTER regex(?industry, ""Telecommunications"") } { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belgium> } UNION { ?uri <http://dbpedia.org/property/locationCountry> ""Belgium""@en } }'}"
qald-9,train,143,Give me a list of all lakes in Denmark.,{'sparql': 'SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> } UNION { ?uri a <http://dbpedia.org/class/yago/LakesOfDenmark> } }'}
qald-9,train,144,How many children does Eddie Murphy have?,{'sparql': 'SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Eddie_Murphy> <http://dbpedia.org/property/children> ?n }'}
qald-9,train,145,Show me all English Gothic buildings in Kent.,{'sparql': 'SELECT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Building> ; <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/English_Gothic_architecture> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Kent> }'}
qald-9,train,146,Who is the manager of Real Madrid?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Real_Madrid_C.F.> <http://dbpedia.org/ontology/manager> ?uri }'}
qald-9,train,147,In which countries can you pay using the West African CFA franc?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> }'}
qald-9,train,148,Which holidays are celebrated around the world?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday }'}
qald-9,train,149,What is the longest river?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> { ?uri <http://dbpedia.org/ontology/length> ?l } UNION { ?uri <http://dbpedia.org/property/length> ?l } } ORDER BY DESC(?l) OFFSET 0 LIMIT 1'}
qald-9,train,150,Which organizations were founded in 1930?,"{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Organisation> { ?uri <http://dbpedia.org/ontology/formationYear> ?date } UNION { ?uri <http://dbpedia.org/ontology/foundingYear> ?date } FILTER regex(?date, ""^1930"") }'}"
qald-9,train,151,What is the birth name of Angela Merkel?,{'sparql': 'SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/property/birthName> ?string }'}
qald-9,train,152,Who has Tom Cruise been married to?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tom_Cruise> }'}
qald-9,train,153,Which weapons did Heckler & Koch develop?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Weapon> ; <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Heckler_&_Koch> }'}
qald-9,train,154,What is the smallest city by area in Germany?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX skos: <http://www.w3.org/2004/02/skos/core#> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dct: <http://purl.org/dc/terms/> SELECT ?city WHERE { ?m skos:broader dbc:Cities_in_Germany . ?city dct:subject ?m ; dbo:areaTotal ?area } ORDER BY ?area LIMIT 1'}
qald-9,train,155,What is the ruling party in Lisbon?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lisbon> <http://dbpedia.org/property/leaderParty> ?uri }'}
qald-9,train,156,How heavy is Jupiter's lightest moon?,{'sparql': 'SELECT DISTINCT ?n WHERE { ?uri <http://dbpedia.org/property/satelliteOf> <http://dbpedia.org/resource/Jupiter> ; <http://dbpedia.org/ontology/mass> ?n } ORDER BY ASC(?n) OFFSET 0 LIMIT 1'}
qald-9,train,157,How many employees does IBM have?,{'sparql': 'SELECT DISTINCT ?number WHERE { <http://dbpedia.org/resource/IBM> <http://dbpedia.org/ontology/numberOfEmployees> ?number }'}
qald-9,train,158,List all episodes of the first season of the HBO television series The Sopranos!,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }'}
qald-9,train,159,What does ICRO stand for?,"{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/abbreviation> ""ICRO"" }'}"
qald-9,train,160,Does the new Battlestar Galactica series have more episodes than the old one?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Battlestar_Galactica_%281978_TV_series%29> dbo:numberOfEpisodes ?x . <http://dbpedia.org/resource/Battlestar_Galactica_%282004_TV_series%29> dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }'}
qald-9,train,161,Give me all films produced by Hal Roach.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> }'}
qald-9,train,162,Who played Agent Smith in Matrix?,{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Agent_Smith <http://dbpedia.org/ontology/portrayer> ?uri }'}
qald-9,train,163,Which Greek parties are pro-European?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> ; <http://dbpedia.org/ontology/ideology> <http://dbpedia.org/resource/Pro-Europeanism> }'}
qald-9,train,164,Give me a list of all bandleaders that play trumpet.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Bandleader> ; <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Trumpet> }'}
qald-9,train,165,What is the second highest mountain on Earth?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 1 LIMIT 1'}
qald-9,train,166,Is Egypts largest city also its capital?,{'sparql': 'ASK WHERE { <http://dbpedia.org/resource/Egypt> <http://dbpedia.org/ontology/largestCity> ?large ; <http://dbpedia.org/ontology/capital> ?capital FILTER ( ?large = ?capital ) }'}
qald-9,train,167,Which rockets were launched from Baikonur?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Rocket> ; <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Baikonur_Cosmodrome> }'}
qald-9,train,168,How many programming languages are there?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> }'}
qald-9,train,169,Which Chess players died in the same place they were born in?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ChessPlayer> ; <http://dbpedia.org/ontology/birthPlace> ?x ; <http://dbpedia.org/ontology/deathPlace> ?y FILTER ( ?x = ?y ) }'}
qald-9,train,170,Who is the owner of Facebook?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/foundedBy> ?uri }'}
qald-9,train,171,Give me all movies with Tom Cruise.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Tom_Cruise> }'}
qald-9,train,172,In which U.S. state is Fort Knox located?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Fort_Knox dbo:location ?uri . ?uri dbo:country res:United_States }'}
qald-9,train,173,Give me all cities in New Jersey with more than 100000 inhabitants.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:isPartOf res:New_Jersey ; dbo:populationTotal ?inhabitants FILTER ( ?inhabitants > 100000 ) }'}
qald-9,train,174,Which mountains are higher than the Nanga Parbat?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nanga_Parbat> <http://dbpedia.org/ontology/elevation> ?elevation . ?uri a <http://dbpedia.org/ontology/Mountain> { ?uri <http://dbpedia.org/ontology/elevation> ?otherelevation } UNION { ?uri <http://dbpedia.org/property/elevationM> ?otherelevation } FILTER ( ?otherelevation > ?elevation ) }'}
qald-9,train,175,Give me all B-sides of the Ramones.,{'sparql': 'SELECT DISTINCT ?string WHERE { ?x <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Ramones> ; <http://dbpedia.org/ontology/bSide> ?string }'}
qald-9,train,176,What are the specialities of the UNC Health Care?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/UNC_Health_Care> <http://dbpedia.org/property/speciality> ?uri }'}
qald-9,train,177,When was Olof Palme shot?,{'sparql': 'SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date }'}
qald-9,train,178,List the seven kings of Rome.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/King_of_Rome> }'}
qald-9,train,179,Give me all people that were born in Vienna and died in Berlin.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Vienna> ; <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Berlin> }'}
qald-9,train,180,Is Darth Vader Luke’s father?,{'sparql': 'ASK WHERE { <http://dbpedia.org/resource/Darth_Vader> <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Luke_Skywalker> }'}
qald-9,train,181,Show me all the breweries in Australia.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Brewery> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }'}
qald-9,train,182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Steven_Spielberg> . ?uri <http://dbpedia.org/ontology/budget> ?b . FILTER( xsd:double(?b) >= 8.0E7 ) }'}
qald-9,train,183,Give me all soccer clubs in Spain.,"{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> { ?uri <http://dbpedia.org/ontology/ground> <http://dbpedia.org/resource/Spain> } UNION { ?uri <http://dbpedia.org/property/ground> ?ground FILTER regex(?ground, ""Spain"") } }'}"
qald-9,train,184,Who produced films starring Natalie Portman?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?film a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Natalie_Portman> ; <http://dbpedia.org/ontology/producer> ?uri }'}
qald-9,train,185,Give me all breeds of the German Shepherd dog.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/breed> <http://dbpedia.org/resource/German_Shepherd> }'}
qald-9,train,186,Who is the heaviest player of the Chicago Bulls?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/ontology/weight> ?num { ?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } } ORDER BY DESC(?num) OFFSET 0 LIMIT 1'}
qald-9,train,187,Which languages are spoken in Estonia?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spokenIn> <http://dbpedia.org/resource/Estonia> }'}
qald-9,train,188,What is the largest country in the world?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:areaTotal ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1'}
qald-9,train,189,What is the largest city in america?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?lcity WHERE { dbr:United_States dbo:largestCity ?lcity }'}
qald-9,train,190,Who was the pope that founded the Vatican Television?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Pope . res:Vatican_Television_Center dbo:foundedBy ?uri }'}
qald-9,train,191,Who discovered Ceres?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> dbo:discoverer ?uri }'}
qald-9,train,192,Who is the king of the Netherlands?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Netherlands dbo:leader ?uri . ?uri rdf:type dbo:Royalty }'}
qald-9,train,193,Is Cola a beverage?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Cola rdf:type dbo:Beverage }'}
qald-9,train,194,What is the alma mater of the chancellor of Germany Angela Merkel?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Almamater WHERE { dbr:Angela_Merkel dbo:almaMater ?Almamater }'}
qald-9,train,195,Who wrote the book Les Piliers de la terre?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }'}
qald-9,train,196,Which airports does Yeti Airlines serve?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Yeti_Airlines dbo:targetAirport ?uri }'}
qald-9,train,197,Where is the birthplace of Goethe?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Goethe WHERE { dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?Goethe }'}
qald-9,train,198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Cuban_Missile_Crisis dbo:date ?x . res:Bay_of_Pigs_Invasion dbo:date ?y FILTER ( ?x < ?y ) }'}
qald-9,train,199,Which ingredients do I need for carrot cake?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Carrot_cake dbo:ingredient ?uri }'}
qald-9,train,200,Who created Wikipedia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Wikipedia dbo:author ?uri }'}
qald-9,train,201,What is the highest mountain in Saxony Germany?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?m WHERE { ?m dbo:mountainRange dbr:Ore_Mountains ; dbo:elevation ?height } ORDER BY DESC(?height) LIMIT 1'}
qald-9,train,202,Who is the current federal minister of finance in Germany?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?leader WHERE { <http://dbpedia.org/resource/Federal_Ministry_of_Finance_(Germany)> dbo:leader ?leader }'}
qald-9,train,203,In which country is Mecca located?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mecca dbo:country ?uri }'}
qald-9,train,204,Who played Gus Fring in Breaking Bad?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Gus_Fring dbo:portrayer ?uri }'}
qald-9,train,205,In which country does the Nile start?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Nile dbo:sourceCountry ?uri }'}
qald-9,train,206,In which state Penn State University is located?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?s WHERE { dbr:Pennsylvania_State_University dbo:state ?s }'}
qald-9,train,207,What is the biggest stadium in Spain?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Stadium ; dbo:location res:Spain ; dbo:seatingCapacity ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1'}
qald-9,train,208,Who is the coach of Ankara's ice hockey team?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:city res:Ankara ; dbo:league res:Turkish_Ice_Hockey_First_League ; dbo:coach ?uri }'}
qald-9,train,209,How large is the area of UK?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?area WHERE { dbr:United_Kingdom dbo:areaTotal ?area }'}
qald-9,train,210,Who created Batman?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Batman dbo:creator ?uri }'}
qald-9,train,211,Was Sigmund Freud married?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Sigmund_Freud dbo:spouse ?uri }'}
qald-9,train,212,Who are the developers of DBpedia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:DBpedia dbo:developer ?uri }'}
qald-9,train,213,Give me all movies directed by Francis Ford Coppola.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:director res:Francis_Ford_Coppola }'}
qald-9,train,214,Are tree frogs a type of amphibian?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Hylidae dbo:class res:Amphibian }'}
qald-9,train,215,What is the location of the Houses of Parliament?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:Palace_of_Westminster dbo:location ?uri }'}
qald-9,train,216,how much is the elevation of Düsseldorf Airport ?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ele WHERE { dbr:Düsseldorf_Airport dbo:elevation ?ele } LIMIT 1'}
qald-9,train,217,How much is the population of mexico city ?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Mexico_City WHERE { dbr:Mexico_City dbo:populationTotal ?Mexico_City }'}
qald-9,train,218,when was the founding date of french fifth republic?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ff WHERE { dbr:French_Fifth_Republic dbo:foundingDate ?ff }'}
qald-9,train,219,Who was the first King of England?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Royalty ; rdf:type yago:WikicatEnglishMonarchs ; dbo:activeYearsStartYear ?date } ORDER BY ASC(?date) OFFSET 0 LIMIT 1'}
qald-9,train,220,Who is the editor of Forbes?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Forbes dbo:editor ?uri }'}
qald-9,train,221,Which awards did Douglas Hofstadter win?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Douglas_Hofstadter dbo:award ?uri }'}
qald-9,train,222,Who is the youngest Darts player?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:DartsPlayer ; dbo:birthDate ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1'}
qald-9,train,223,Is horse racing a sport?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { dbr:Horse_racing rdf:type dbo:Sport }'}
qald-9,train,224,Which river does the Brooklyn Bridge cross?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:crosses ?uri }'}
qald-9,train,225,How many people live in Poland?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Poland dbo:populationTotal ?uri }'}
qald-9,train,226,When was the last episode of the TV series Friends aired?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?date WHERE { dbr:Friends dbo:completionDate ?date }'}
qald-9,train,227,Is the wife of president Obama called Michelle?,"{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Barack_Obama dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, ""Michelle"") }'}"
qald-9,train,229,Who is 8th president of US?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?name WHERE { dbr:8th_President_of_the_United_States dbo:wikiPageRedirects ?link . ?link dbp:name ?name }'}
qald-9,train,230,how much is the total population of  european union?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?europop WHERE { dbr:European_Union dbo:populationTotal ?europop }'}
qald-9,train,231,Give me all launch pads operated by NASA.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:LaunchPad ; dbo:operator res:NASA }'}
qald-9,train,232,Who developed the video game World of Warcraft?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:World_of_Warcraft dbo:developer ?uri }'}
qald-9,train,233,What is the birth name of Adele?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?bn WHERE { dbr:Adele dbo:birthName ?bn }'}
qald-9,train,234,What is the population of Cairo?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?pop WHERE { dbr:Cairo dbo:populationTotal ?pop }'}
qald-9,train,235,Is Frank Herbert still alive?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { OPTIONAL { res:Frank_Herbert dbo:deathDate ?date } FILTER ( ! bound(?date) ) }'}
qald-9,train,236,What is the last work of Dan Brown?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?book WHERE { { ?book dbo:author dbr:Dan_Brown . ?book dbp:releaseDate ?date } UNION { ?book dbo:author dbr:Dan_Brown . ?book dbo:publicationDate ?date} } ORDER BY DESC(xsd:date(?date)) LIMIT 1'}
qald-9,train,237,Where is Sungkyunkwan University?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?country WHERE { dbr:Sungkyunkwan_University dbo:city ?city ; dbo:country ?country }'}
qald-9,train,238,Who is the author of the interpretation of dreams?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Author WHERE { dbr:The_Interpretation_of_Dreams dbo:author ?Author }'}
qald-9,train,239,When was the death  of  Shakespeare?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?x WHERE { dbr:William_Shakespeare dbo:deathDate ?x } LIMIT 1'}
qald-9,train,241,Who developed Slack?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:product <http://dbpedia.org/resource/Slack_(software)> }'}
qald-9,train,242,Where is the origin of Carolina reaper?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:Carolina_Reaper dbo:origin ?uri}'}
qald-9,train,243,In which year was Rachel Stevens born?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rachel_Stevens dbo:birthYear ?uri }'}
qald-9,train,244,How often did Jane Fonda marry?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Jane_Fonda dbo:spouse ?uri }'}
qald-9,train,245,Was the wife of president Lincoln called Mary?,"{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Abraham_Lincoln dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, ""Mary"") }'}"
qald-9,train,246,Which cities does the Weser flow through?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Weser dbo:city ?uri }'}
qald-9,train,247,In which programming language is GIMP written?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:GIMP dbo:programmingLanguage ?uri }'}
qald-9,train,248,Which university did Angela Merkel attend?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?university WHERE { res:Angela_Merkel dbo:almaMater ?university }'}
qald-9,train,249,List all the musicals with music by Elton John.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Musical ; dbo:musicBy res:Elton_John }'}
qald-9,train,250,How many Aldi stores are there?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?number WHERE { res:Aldi dbo:numberOfLocations ?number }'}
qald-9,train,251,What is the longest river in the world?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:BodyOfWater ; dbo:length ?length } ORDER BY DESC(?length) LIMIT 1'}
qald-9,train,252,When was John Adams born?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:John_Adams dbo:birthDate ?date }'}
qald-9,train,253,Which companies produce hovercrafts?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:product res:Hovercraft }'}
qald-9,train,254,Who was the wife of U.S. president Lincoln?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:spouse ?uri }'}
qald-9,train,255,Which species does an elephant belong?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?species WHERE { dbr:Elephant dbp:species ?species }'}
qald-9,train,256,How many people live in the capital of Australia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Australia dbo:capital ?x . ?x dbo:populationTotal ?num }'}
qald-9,train,257,In which ancient empire could you pay with cocoa beans?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:currency res:Cocoa_bean }'}
qald-9,train,258,How many theories did Albert Einstein come up with?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { dbr:Albert_Einstein dbo:knownFor ?uri }'}
qald-9,train,259,Who composed the soundtrack for Cameron's Titanic?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Titanic_(1997_film)> dbo:musicComposer ?uri }'}
qald-9,train,260,Give me the runtime of Toy Story.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?runtime WHERE { res:Toy_Story dbo:runtime ?runtime }'}
qald-9,train,262,With how many countries Iran has borders?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?border WHERE { dbr:Geography_of_Iran dbp:borders ?border } LIMIT 8'}
qald-9,train,263,Which electronics companies were founded in Beijing?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:industry res:Electronics ; dbo:foundationPlace res:Beijing }'}
qald-9,train,264,Who was the successor of John F. Kennedy?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:successor ?uri }'}
qald-9,train,265,Who is the mayor of Paris?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Paris dbo:mayor ?uri }'}
qald-9,train,266,Did Arnold Schwarzenegger attend a university?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Arnold_Schwarzenegger dbo:almaMater ?x . ?x rdf:type dbo:University }'}
qald-9,train,267,Is James Bond married?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:James_Bond dbo:spouse ?uri }'}
qald-9,train,268,Does the Isar flow into a lake?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?x dbo:inflow res:Isar ; rdf:type dbo:Lake }'}
qald-9,train,269,Which Indian company has the most employees?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:location res:India ; dbo:numberOfEmployees ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1'}
qald-9,train,270,Who was John F. Kennedy's vice president?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:vicePresident ?uri }'}
qald-9,train,271,Which country does the creator of Miffy come from?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Miffy dbo:creator ?x . ?x dbo:nationality ?uri }'}
qald-9,train,273,In what city is the Heineken brewery?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Heineken dbo:manufacturer ?x . ?x dbo:locationCity ?uri }'}
qald-9,train,274,Is Barack Obama a democrat?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:party <http://dbpedia.org/resource/Democratic_Party_(United_States)> }'}
qald-9,train,275,List the children of Margaret Thatcher.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Margaret_Thatcher dbo:child ?uri }'}
qald-9,train,276,From which region is the Melon de Bourgogne?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Melon_de_Bourgogne dbo:wineRegion ?uri }'}
qald-9,train,278,how big is the total area of North Rhine- Westphalia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?tarea WHERE { dbr:North_Rhine-Westphalia dbo:areaTotal ?tarea }'}
qald-9,train,279,Which city has the most inhabitants?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?pop } ORDER BY DESC(?pop) OFFSET 0 LIMIT 1'}
qald-9,train,280,What is Donald Trump's main business?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?owner WHERE { ?owner dbo:owner dbr:Donald_Trump }'}
qald-9,train,281,When will start the final match of the football world cup 2018?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?Date WHERE { dbr:2018_FIFA_World_Cup dbp:date ?Date } ORDER BY DESC(?Date) LIMIT 1'}
qald-9,train,282,Which films did Stanley Kubrick direct?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Stanley_Kubrick }'}
qald-9,train,283,how much is the population  Iraq?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?pIraq WHERE { dbr:Iraq dbo:populationTotal ?pIraq }'}
qald-9,train,284,How many inhabitants does the largest city in Canada have?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Canada dbo:largestCity ?city . ?city dbo:populationTotal ?num }'}
qald-9,train,285,Who is the mayor of the capital of French Polynesia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:French_Polynesia dbo:capital ?x . ?x dbo:mayor ?uri }'}
qald-9,train,286,Give me all actors starring in movies directed by William Shatner.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring ?uri }'}
qald-9,train,287,How tall is Claudia Schiffer?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Claudia_Schiffer dbo:height ?height }'}
qald-9,train,288,how much is the population densty rank of germany?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?rank WHERE { dbr:Germany dbp:populationDensityRank ?rank }'}
qald-9,train,289,What is the highest mountain in Italy?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Italy ; dbo:elevation ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1'}
qald-9,train,290,List all games by GMT.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:publisher res:GMT_Games }'}
qald-9,train,291,What is the official language of Suriname?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Suriname dbo:officialLanguage ?uri }'}
qald-9,train,292,In which city did Nikos Kazantzakis die?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Nikos_Kazantzakis dbo:deathPlace ?uri . ?uri rdf:type dbo:Town }'}
qald-9,train,293,What is in a chocolate chip cookie?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chocolate_chip_cookie dbo:ingredient ?uri }'}
qald-9,train,294,In which country is the Limerick Lake?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Limerick_Lake dbo:country ?uri }'}
qald-9,train,295,Give me all video games published by Mean Hamster Software.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:VideoGame ; dbo:publisher res:Mean_Hamster_Software }'}
qald-9,train,296,Give me all members of Prodigy.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Prodigy dbo:bandMember ?uri }'}
qald-9,train,297,In which time zone is Rome?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rome dbo:timeZone ?uri }'}
qald-9,train,298,How high is the lighthouse in Colombo?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Colombo_Lighthouse dbo:height ?num }'}
qald-9,train,299,Who are the writers of the Wall album of Pink Floyd?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?writers WHERE { dbr:The_Wall dbp:writer ?writers }'}
qald-9,train,300,Who is the mayor of Rotterdam?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rotterdam dbo:leaderName ?uri }'}
qald-9,train,301,What is the largest city in Australia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Australia dbo:largestCity ?uri }'}
qald-9,train,302,Who was married to president Chirac?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Jacques_Chirac dbo:spouse ?uri }'}
qald-9,train,303,What form of government is found in South Africa?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:South_Africa dbo:governmentType ?uri }'}
qald-9,train,304,How high is the Yokohama Marine Tower?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Yokohama_Marine_Tower dbo:height ?num }'}
qald-9,train,305,Which holidays are celebrated around the world? test2,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday }'}
qald-9,train,306,Who is the tallest basketball player?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:BasketballPlayer ; dbo:height ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1'}
qald-9,train,307,How many languages are spoken in Turkmenistan?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?x) AS ?c) WHERE { res:Turkmenistan dbo:language ?x }'}
qald-9,train,308,Did Che Guevara have children?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Che_Guevara dbo:child ?uri }'}
qald-9,train,309,Did Kaurismäki ever win the Grand Prix at Cannes?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aki_Kaurismäki dbo:award <http://dbpedia.org/resource/Grand_Prix_(Cannes_Film_Festival)> }'}
qald-9,train,310,To which party does the mayor of Paris belong?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Paris dbo:mayor ?x . ?x dbo:party ?uri }'}
qald-9,train,311,Who is the Formula 1 race driver with the most races?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:FormulaOneRacer ; dbo:races ?x } ORDER BY DESC(?x) OFFSET 0 LIMIT 1'}
qald-9,train,312,What country is Sitecore from?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Sitecore dbo:foundationPlace ?uri }'}
qald-9,train,313,Give me the birth place of Frank Sinatra.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?place WHERE { res:Frank_Sinatra dbo:birthPlace ?place }'}
qald-9,train,314,Is Christian Bale starring in Velvet Goldmine?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Velvet_Goldmine dbo:starring res:Christian_Bale }'}
qald-9,train,315,Who is the son of Sonny and Cher?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:parent res:Cher ; dbo:parent res:Sonny_Bono }'}
qald-9,train,316,How many ethnic groups live in Slovenia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Slovenia dbo:ethnicGroup ?uri }'}
qald-9,train,317,What is the capital of Cameroon?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Cameroon dbo:capital ?uri }'}
qald-9,train,318,Was Natalie Portman born in the United States?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Natalie_Portman dbo:birthPlace ?city . ?city dbo:country res:United_States }'}
qald-9,train,319,How many pages does War and Peace have?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:War_and_Peace dbo:numberOfPages ?n }'}
qald-9,train,320,Who is the oldest child of Meryl Streep?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Meryl_Streep dbo:child ?uri . ?uri dbo:birthDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1'}
qald-9,train,321,Which television shows were created by Walt Disney?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:TelevisionShow ; dbo:creator res:Walt_Disney }'}
qald-9,train,322,What does IYCM stand for?,"{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:abbreviation ""IYCM"" }'}"
qald-9,train,323,Which types of grapes grow in Oregon?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Oregon_wine dbo:growingGrape ?uri }'}
qald-9,train,324,Was U.S. president Jackson involved in a war?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Andrew_Jackson dbo:battle ?battle }'}
qald-9,train,325,When was the Titanic completed?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:RMS_Titanic dbo:completionDate ?date }'}
qald-9,train,326,Did Tesla win a nobel prize in physics?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Nikola_Tesla dbo:award res:Nobel_Prize_in_Physics }'}
qald-9,train,327,How many states are in Mexico?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { ?uri dbo:type dbr:States_of_Mexico }'}
qald-9,train,328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri dbo:knownFor res:Manhattan_Project ; rdf:type dbo:Scientist ; dbo:knownFor res:Nobel_Peace_Prize }'}
qald-9,train,329,How much did the Lego Movie cost?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:The_Lego_Movie dbo:budget ?n }'}
qald-9,train,330,Who composed the music for Harold and Maude?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Harold_and_Maude dbo:musicComposer ?uri }'}
qald-9,train,331,List all episodes of the first season of the HBO television series The Sopranos.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }'}
qald-9,train,332,Which city has the least inhabitants?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?pop } ORDER BY ASC(?pop) OFFSET 0 LIMIT 1'}
qald-9,train,333,Where is Syngman Rhee buried?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Syngman_Rhee dbo:restingPlace ?uri }'}
qald-9,train,334,Does Neymar play for Real Madrid?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Neymar dbo:team <http://dbpedia.org/resource/Real_Madrid_C.F.> }'}
qald-9,train,335,Who wrote the book The Pillars of the Earth?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }'}
qald-9,train,336,Do Prince Harry and Prince William have the same parents?,"{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Prince_William,_Duke_of_Cambridge> dbo:parent ?x . res:Prince_Harry dbo:parent ?x }'}"
qald-9,train,337,Who was the doctoral supervisor of Albert Einstein?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Albert_Einstein dbo:doctoralAdvisor ?uri }'}
qald-9,train,338,Does Breaking Bad have more episodes than Game of Thrones?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Breaking_Bad dbo:numberOfEpisodes ?x . res:Game_of_Thrones dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }'}
qald-9,train,339,Who was Vincent van Gogh inspired by?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:influenced res:Vincent_van_Gogh }'}
qald-9,train,340,Which building after the Burj Khalifa has the most floors?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Burj_Khalifa dbo:floorCount ?burj . ?uri rdf:type dbo:Building ; dbo:floorCount ?proj FILTER ( ?proj < ?burj ) } ORDER BY DESC(?proj) LIMIT 1'}
qald-9,train,341,What was the final result of the War of the Roses?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?result WHERE { ?uri dbo:isPartOfMilitaryConflict dbr:Wars_of_the_Roses ; dbo:result ?result ; dbo:date ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1'}
qald-9,train,342,How much did Pulp Fiction cost?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:Pulp_Fiction dbo:budget ?n }'}
qald-9,train,343,Is proinsulin a protein?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Proinsulin rdf:type dbo:Protein }'}
qald-9,train,344,Do Urdu and Persian have a common root?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Urdu dbo:languageFamily ?uri . dbr:Persian_language dbo:languageFamily ?uri }'}
qald-9,train,345,Who is starring in Spanish movies produced by Benicio del Toro?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film ; dbo:country res:Spain ; dbo:producer res:Benicio_del_Toro ; dbo:starring ?uri . ?uri rdf:type dbo:Person }'}
qald-9,train,346,Is Lake Baikal bigger than the Great Bear Lake?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Lake_Baikal dbo:areaTotal ?a1 . res:Great_Bear_Lake dbo:areaTotal ?a2 FILTER ( ?a1 > ?a2 ) }'}
qald-9,train,347,Show me all books in Asimov's Foundation series.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:Foundation_series }'}
qald-9,train,348,Where was Bach born?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Johann_Sebastian_Bach dbo:birthPlace ?uri }'}
qald-9,train,349,Which city has the oldest running metro?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?loc WHERE { ?uri dbo:type dbr:Rapid_transit ; dbo:openingYear ?date ; dbo:location ?loc . ?loc rdf:type dbo:City } ORDER BY ASC(?date) LIMIT 1'}
qald-9,train,350,Who designed the Brooklyn Bridge?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:architect ?uri }'}
qald-9,train,351,How many people live in Eurasia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?population WHERE { res:Eurasia dbo:populationTotal ?population }'}
qald-9,train,352,Who is the host of the BBC Wildlife Specials?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:BBC_Wildlife_Specials dbo:presenter ?uri }'}
qald-9,train,353,"What is the total population of Melbourne, Florida?","{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Melbourne,_Florida> dbo:populationTotal ?uri }'}"
qald-9,train,354,What country is Mount Everest in?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:locatedInArea ?uri . ?uri rdf:type dbo:Country }'}
qald-9,train,355,To which artistic movement did the painter of The Three Dancers belong?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Three_Dancers dbo:author ?person . ?person dbo:movement ?uri }'}
qald-9,train,356,When did Operation Overlord commence?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Operation_Overlord dbo:date ?d }'}
qald-9,train,357,What is the bridge with the longest span?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Bridge ; dbo:mainspan ?s } ORDER BY DESC(?s) OFFSET 0 LIMIT 1'}
qald-9,train,358,Is there a video game called Battle Chess?,"{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?uri rdf:type dbo:VideoGame ; rdfs:label ""Battle Chess""@en }'}"
qald-9,train,359,Who was buried in the Great Pyramid of Giza?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:restingPlace dbr:Great_Pyramid_of_Giza }'}
qald-9,train,360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { ?uri dbo:assembly dbr:Malaysia ; dbo:manufacturer dbr:Ford_Motor_Company }'}
qald-9,train,361,Did Socrates influence Aristotle?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aristotle dbo:influencedBy res:Socrates }'}
qald-9,train,362,How many children did Benjamin Franklin have?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Benjamin_Franklin dbo:child ?uri }'}
qald-9,train,363,How tall is Michael Jordan?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Michael_Jordan dbo:height ?num }'}
qald-9,train,364,In which UK city are the headquarters of the MI6?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Secret_Intelligence_Service dbo:headquarter ?uri . ?uri dbo:country res:United_Kingdom }'}
qald-9,train,365,Who created Family Guy?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Family_Guy dbo:creator ?uri }'}
qald-9,train,366,In which city does the Chile Route 68 end?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chile_Route_68 dbo:routeEnd ?uri }'}
qald-9,train,367,Give me the grandchildren of Elvis Presley.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Elvis_Presley dbo:child ?child . ?child dbo:child ?uri }'}
qald-9,train,368,When did the Ming dynasty dissolve?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Ming_dynasty dbo:dissolutionDate ?date }'}
qald-9,train,369,In which military conflicts did Lawrence of Arabia participate?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:T._E._Lawrence dbo:battle ?uri }'}
qald-9,train,370,What is the timezone in San Pedro de Atacama?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:San_Pedro_de_Atacama dbo:timeZone ?uri }'}
qald-9,train,371,Give me all books by William Goldman with more than 300 pages.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:William_Goldman ; dbo:numberOfPages ?x FILTER ( ?x > 300 ) }'}
qald-9,train,372,What did Bruce Carver die from?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bruce_Carver dbo:deathCause ?uri }'}
qald-9,train,373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Lufthansa dbo:subsidiary ?uri . ?uri dbo:targetAirport res:Dortmund_Airport ; dbo:targetAirport res:Berlin_Tegel_Airport }'}
qald-9,train,374,Does Abraham Lincoln's death place have a website?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Abraham_Lincoln dbo:deathPlace ?p . ?p dbo:website ?w }'}
qald-9,train,375,Did Elvis Presley have children?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Elvis_Presley dbo:child ?uri }'}
qald-9,train,376,Is Michelle Obama the wife of Barack Obama?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:spouse res:Michelle_Obama }'}
qald-9,train,377,In which city does Sylvester Stallone live?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City . res:Sylvester_Stallone dbo:residence ?uri }'}
qald-9,train,378,Which books by Kerouac were published by Viking Press?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:publisher res:Viking_Press ; dbo:author res:Jack_Kerouac }'}
qald-9,train,379,Who wrote the song Hotel California?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Hotel_California dbo:writer ?uri }'}
qald-9,train,380,What is the capital of Canada?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Canada dbo:capital ?uri }'}
qald-9,train,381,Who is the mayor of Tel Aviv?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Tel_Aviv dbo:leaderName ?uri }'}
qald-9,train,382,What form of government does Russia have?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Russia dbo:governmentType ?uri }'}
qald-9,train,383,Show me the book that Muhammad Ali wrote.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:Muhammad_Ali }'}
qald-9,train,384,Who was the first to climb Mount Everest?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:firstAscentPerson ?uri }'}
qald-9,train,385,How many languages are spoken in Colombia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri rdf:type dbo:Language . res:Colombia dbo:language ?uri }'}
qald-9,train,386,What is the currency of the Czech Republic?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Czech_Republic dbo:currency ?uri }'}
qald-9,train,387,Where in France is sparkling wine produced?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:wineProduced res:Sparkling_wine ; dbo:location res:France }'}
qald-9,train,388,When did Boris Becker end his active career?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Boris_Becker dbo:activeYearsEndDate ?d }'}
qald-9,train,389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Mickey_Rourke ; dbo:director res:Guy_Ritchie }'}
qald-9,train,390,In which films did Julia Roberts as well as Richard Gere play?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Julia_Roberts ; dbo:starring res:Richard_Gere }'}
qald-9,train,391,Show me Hemingway's autobiography.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:author res:Ernest_Hemingway ; dbo:literaryGenre res:Autobiography }'}
qald-9,train,392,How tall is Amazon Eve?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Amazon_Eve dbo:height ?height }'}
qald-9,train,393,What are the five boroughs of New York?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:governmentType <http://dbpedia.org/resource/Borough_(New_York_City)> }'}
qald-9,train,394,Give me all Canadian Grunge record labels.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:RecordLabel ; dbo:genre res:Grunge ; dbo:country res:Canada }'}
qald-9,train,395,In which country does the Ganges start?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ganges dbo:sourceCountry ?uri }'}
qald-9,train,396,Who is the founder of Penguin Books?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Penguin_Books dbo:founder ?uri }'}
qald-9,train,397,Who wrote the Game of Thrones theme?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Game_of_Thrones dbo:composer ?uri }'}
qald-9,train,398,Who is the president of Eritrea?,"{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Eritrea dbo:leader ?uri ; dbo:leaderTitle ""President""@en }'}"
qald-9,train,399,In which city did John F. Kennedy die?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri . ?uri rdf:type dbo:City }'}
qald-9,train,400,What is the highest mountain in Australia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Australia ; dbo:elevation ?elevation } ORDER BY DESC(?elevation) LIMIT 1'}
qald-9,train,401,Who writes the Farmers' Almanac?,"{'sparql': ""PREFIX dbp: <http://dbpedia.org/property/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Farmers'_Almanac> dbp:editor ?uri }""}"
qald-9,train,402,Give me the currency of China.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:China dbo:currency ?uri }'}
qald-9,train,403,Give me all Swedish oceanographers.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:field res:Oceanography ; dbo:birthPlace res:Sweden }'}
qald-9,train,404,In which city are the headquarters of the United Nations?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Headquarters_of_the_United_Nations dbo:location ?uri . ?uri rdf:type dbo:City }'}
qald-9,train,405,Is Rita Wilson the wife of Tom Hanks?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Tom_Hanks dbo:spouse res:Rita_Wilson }'}
qald-9,train,406,In which countries do people speak Japanese?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:language res:Japanese_language }'}
qald-9,train,407,Which of Tim Burton's films had the highest budget?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Tim_Burton ; dbo:budget ?b } ORDER BY ?b OFFSET 0 LIMIT 1'}
qald-9,train,408,Which museum in New York has the most visitors?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Museum ; dbo:location res:New_York_City ; dbo:numberOfVisitors ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1'}
qald-9,train,409,What was the first Queen album?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Album ; dbo:artist <http://dbpedia.org/resource/Queen_(band)> ; dbo:releaseDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1'}
qald-9,train,410,What was the first name of the band Queens of the Stone Age?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?name WHERE { res:Queens_of_the_Stone_Age dbo:alias ?name }'}
qald-9,train,411,What was the last movie with Alec Guinness?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Alec_Guinness ; dbo:releaseDate ?date } ORDER BY DESC(?date) LIMIT 1'}
qald-9,train,412,Give me all actors starring in Last Action Hero.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Last_Action_Hero dbo:starring ?uri }'}
qald-9,train,413,Who discovered Pluto?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:Pluto dbo:discoverer ?uri }'}
qald-6,train,100,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,{}
qald-6,train,101,Which German cities have more than 250000 inhabitants?,{'sparql': 'SELECT DISTINCT ?uri WHERE { { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> . } UNION { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town> . }  ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> .  ?uri <http://dbpedia.org/ontology/populationTotal> ?population .  FILTER ( ?population > 250000 ) } '}
qald-6,train,104,How many students does the Free University in Amsterdam have?,{'sparql': 'SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/VU_University_Amsterdam> <http://dbpedia.org/ontology/numberOfStudents> ?num . } '}
qald-6,train,106,Give me all professional skateboarders from Sweden.,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Skateboarding> . { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> . } UNION { ?uri <http://dbpedia.org/ontology/birthPlace> ?place .  ?place <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> . } } '}
qald-6,train,200,Who produces Orangina?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Orangina> . } '}
qald-6,train,113,Who is the youngest player in the Premier League?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/team> ?x .  ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Premier_League> .  ?uri <http://dbpedia.org/ontology/birthDate> ?y . } ORDER BY DESC(?y) OFFSET 0 LIMIT 1 '}
qald-6,train,117,Give me all cars that are produced in Germany.,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile> . { ?uri <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Germany> . } UNION { ?uri <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Germany> . } UNION { { ?uri <http://dbpedia.org/ontology/manufacturer> ?x . }  UNION  { ?uri <http://dbpedia.org/property/manufacturer> ?x . }  { ?x <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Germany> . }  UNION  { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Germany> . } } } '}
qald-6,train,118,What were the main discoveries of the Mars rover Curiosity?,{}
qald-6,train,124,Who was the father of Queen Elizabeth II?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Elizabeth_II> <http://dbpedia.org/property/father> ?uri . } '}
qald-6,train,125,Which U.S. state has been admitted latest?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .  ?uri <http://dbpedia.org/property/admittancedate> ?x . } ORDER BY DESC(?x) OFFSET 0 LIMIT 1 '}
qald-6,train,127,Butch Otter is the governor of which U.S. state?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .  ?uri <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Butch_Otter> . }'}
qald-6,train,136,What is the melting point of copper?,{}
qald-6,train,137,Give me all sister cities of Brno.,{}
qald-6,train,141,Who founded Intel?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Intel> <http://dbpedia.org/ontology/foundedBy> ?uri . } '}
qald-6,train,142,Who is the husband of Amanda Palmer?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Amanda_Palmer> <http://dbpedia.org/property/spouse> ?uri . } '}
qald-6,train,145,Which countries are connected by the Rhine?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Rhine> <http://dbpedia.org/property/country> ?string .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .  ?uri <http://www.w3.org/2000/01/rdf-schema#label> ?string . } '}
qald-6,train,146,Which professional surfers were born in Australia?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Surfing> . { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Australia> . } UNION { ?uri <http://dbpedia.org/ontology/birthPlace> ?x .  ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> . } } '}
qald-6,train,147,What is the average temperature on Hawaii?,{}
qald-6,train,152,Who invented the zipper?,{}
qald-6,train,154,What are the nicknames of San Francisco?,{'sparql': 'SELECT DISTINCT ?string WHERE {  <http://dbpedia.org/resource/San_Francisco> <http://dbpedia.org/property/nickname> ?string . } '}
qald-6,train,155,Which Greek goddesses dwelt on Mount Olympus?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/GreekGoddesses> .  ?uri <http://dbpedia.org/property/abode> <http://dbpedia.org/resource/Mount_Olympus> . } '}
qald-6,train,158,What is the time zone of Salt Lake City?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Salt_Lake_City> <http://dbpedia.org/property/timezone> ?uri . } '}
qald-6,train,16,Give me the capitals of all countries in Africa.,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?states <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/AfricanCountries> .  ?states <http://dbpedia.org/ontology/capital> ?uri . } '}
qald-6,train,167,Who are the parents of the wife of Juan Carlos I?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Juan_Carlos_I_of_Spain> <http://dbpedia.org/ontology/spouse> ?x .  ?x <http://dbpedia.org/ontology/parent> ?uri . } '}
qald-6,train,172,Where is Fort Knox located?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Fort_Knox> <http://dbpedia.org/property/location> ?uri . }'}
qald-6,train,174,When did Michael Jackson die?,{'sparql': 'SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Michael_Jackson> <http://dbpedia.org/ontology/deathDate> ?date . } '}
qald-6,train,177,Who was called Frank The Tank?,"{'sparql': ""SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/property/nickname> 'Frank The Tank'@en . } ""}"
qald-6,train,18,Which museum exhibits The Scream by Munch?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Scream> <http://dbpedia.org/ontology/museum> ?uri . } '}
qald-6,train,182,Give me a list of all American inventions.,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/AmericanInventions> . } '}
qald-6,train,183,How high is the Mount Everest?,{'sparql': 'SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/elevation> ?num. } '}
qald-6,train,191,Which U.S. state has the abbreviation MN?,"{'sparql': ""SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .  ?uri <http://dbpedia.org/property/postalabbreviation> 'MN'@en . } ""}"
qald-6,train,193,Which movies did Kurosawa direct?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Akira_Kurosawa> . } '}
qald-6,train,194,What is the founding year of the brewery that produces Pilsner Urquell?,{'sparql': 'SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/Pilsner_Urquell> <http://dbpedia.org/property/brewery> ?uri .  ?uri <http://dbpedia.org/property/foundation> ?num . } '}
qald-6,train,195,Who wrote the lyrics for the Polish national anthem?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/anthem> ?x .  ?x <http://dbpedia.org/property/author> ?uri . } '}
qald-6,train,197,Who painted The Storm on the Sea of Galilee?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/The_Storm_on_the_Sea_of_Galilee> <http://dbpedia.org/property/artist> ?uri . } '}
qald-6,train,24,Which mountain is the highest after the Annapurna?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Annapurna> <http://dbpedia.org/ontology/elevation> ?elevation .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> .  ?uri <http://dbpedia.org/ontology/elevation> ?otherelevation .  FILTER (?otherelevation < ?elevation) . } ORDER BY DESC(?otherelevation) OFFSET 0 LIMIT 1 '}
qald-6,train,26,Which bridges are of the same type as the Manhattan Bridge?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge> .  ?uri <http://dbpedia.org/property/design> ?design .  <http://dbpedia.org/resource/Manhattan_Bridge> <http://dbpedia.org/property/design> ?mdesign .  FILTER (?design = ?mdesign && ?uri != <http://dbpedia.org/resource/Manhattan_Bridge>) .} '}
qald-6,train,28,Give me all communist countries.,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/property/ideology> <http://dbpedia.org/resource/Communism> . }'}
qald-6,train,3,Who is the daughter of Robert Kennedy married to?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Robert_F._Kennedy> <http://dbpedia.org/ontology/child> ?child .  ?child <http://dbpedia.org/ontology/spouse> ?uri . } '}
qald-6,train,30,Which U.S. state has the highest population density?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .  ?uri <http://dbpedia.org/property/densityrank> ?rank . } ORDER BY ASC(?rank) OFFSET 0 LIMIT 1 '}
qald-6,train,33,What is the area code of Berlin?,{'sparql': 'SELECT DISTINCT ?string WHERE {  <http://dbpedia.org/resource/Berlin> <http://dbpedia.org/ontology/areaCode> ?string . } '}
qald-6,train,36,Through which countries does the Yenisei river flow?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Yenisei_River> <http://dbpedia.org/ontology/country> ?uri . } '}
qald-6,train,38,Which politicians were married to a German?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .  ?uri <http://dbpedia.org/ontology/spouse> ?spouse . { ?spouse <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> . } UNION { ?spouse <http://dbpedia.org/ontology/birthPlace> ?p .  ?p <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> . } } '}
qald-6,train,39,When was the Battle of Gettysburg?,{'sparql': 'SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Battle_of_Gettysburg> <http://dbpedia.org/ontology/date> ?date . } '}
qald-6,train,5,How many countries are there in Europe?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EuropeanCountries> . } '}
qald-6,train,56,What is the official website of Tom Cruise?,{'sparql': 'SELECT DISTINCT ?string WHERE {  <http://dbpedia.org/resource/Tom_Cruise> <http://dbpedia.org/property/website> ?string . } '}
qald-6,train,59,Give me all people with first name Jimmy.,"{'sparql': ""SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> foaf:Person .  ?uri foaf:givenName 'Jimmy'@en . } ""}"
qald-6,train,65,Which companies work in the aerospace industry as well as in medicine?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company> .  ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Aerospace> .  ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Medicine> . } '}
qald-6,train,67,Give me the websites of companies with more than 500000 employees.,{'sparql': 'SELECT DISTINCT ?string WHERE {  ?c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company> . { ?c <http://dbpedia.org/ontology/numberOfEmployees> ?employees . } UNION { ?c <http://dbpedia.org/property/numEmployees> ?employees . }  FILTER( xsd:integer(?employees) > 500000 ) .  ?c <http://dbpedia.org/property/homepage> ?string . } '}
qald-6,train,74,Which capitals in Europe were host cities of the summer olympic games?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CapitalsInEurope> .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/HostCitiesOfTheSummerOlympicGames> . } '}
qald-6,train,75,Who was the 16th president of the United States?,"{'sparql': ""SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/office> 'President of the United States'^^<http://www.w3.org/2001/XMLSchema#string> .  ?uri <http://dbpedia.org/ontology/orderInOffice> '16th'^^<http://www.w3.org/2001/XMLSchema#string> . } ""}"
qald-6,train,79,"Which airports are located in California, USA?",{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airport> . { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> . } UNION { ?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/California> . } UNION { ?uri <http://dbpedia.org/ontology/city> ?city .  ?city <http://dbpedia.org/ontology/isPartOf> <http://dbpedia.org/resource/California> . } UNION { ?uri <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/California> . } } '}
qald-6,train,8,Which states of Germany are governed by the Social Democratic Party?,"{'sparql': ""SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfGermany> .  { ?uri <http://dbpedia.org/ontology/leaderParty> <http://dbpedia.org/resource/Social_Democratic_Party_of_Germany> . } UNION  { ?uri <http://dbpedia.org/property/rulingParty> 'SPD'@en . } } ""}"
qald-6,train,86,Give me all female given names.,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GivenName> .  ?uri <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Female> . } '}
qald-6,train,90,When was Jack Wolfskin founded?,{'sparql': 'SELECT DISTINCT ?year WHERE {  <http://dbpedia.org/resource/Jack_Wolfskin> <http://dbpedia.org/ontology/foundingYear> ?year . } '}
qald-6,train,94,Which budget did the first movie of Zdenek Sverak have?,{}
qald-6,train,95,How many big fires struck Paris during the Middle Ages?,{}
qald-6,train,96,Is Pamela Anderson a vegan?,{}
qald-6,train,97,How often was Michael Jordan divorced?,{}
qald-6,train,98,What is the most beautiful painting?,{}
qald-6,train,99,Give me all animal species that live in the Amazon rainforest.,{}
qald-6,train,249,In which studio did the Beatles record their first album?,{}
qald-6,train,250,How many gold medals did Michael Phelps win at the 2008 Olympics?,{}
qald-6,train,211,Give me all animals that are extinct.,"{'sparql': ""SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Animal> .  ?uri <http://dbpedia.org/ontology/conservationStatus> 'EX'^^<http://www.w3.org/2001/XMLSchema#string> . }""}"
qald-6,train,244,How deep is Lake Chiemsee?,{'sparql': 'SELECT DISTINCT ?n WHERE {  <http://dbpedia.org/resource/Chiemsee> <http://dbpedia.org/ontology/depth> ?n . } '}
qald-6,train,201,Give me all taikonauts.,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut> .  ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/China> . } '}
qald-6,train,238,How many James Bond movies are there?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JamesBondFilms> . } '}
qald-6,train,205,Give me all Dutch parties.,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .  ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> . } '}
qald-6,train,230,When is Halloween?,{'sparql': 'SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Halloween> <http://dbpedia.org/property/date> ?date . } '}
qald-6,train,253,Who was called Rodzilla?,"{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/property/nickname> ""Rodzilla""@en . } '}"
qald-6,train,272,Which book has the most pages?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> .  ?uri <http://dbpedia.org/ontology/numberOfPages> ?n . } ORDER BY DESC(?n) OFFSET 0 LIMIT 1 '}
qald-6,train,275,When did Dracula's creator die?,{'sparql': 'SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Count_Dracula> <http://dbpedia.org/ontology/creator> ?x .  ?x <http://dbpedia.org/ontology/deathDate> ?date . } '}
qald-6,train,286,What is the highest volcano in Africa?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Volcano> .  ?uri <http://dbpedia.org/ontology/locatedInArea> ?area .  ?area <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/AfricanCountries> .  ?uri <http://dbpedia.org/ontology/elevation> ?elevation . } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1 '}
qald-6,train,291,Who was influenced by Socrates?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Socrates> . } '}
qald-6,train,293,Give me English actors starring in Lovesick.,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Lovesick> <http://dbpedia.org/ontology/starring> ?uri .  { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/England> . }  UNION  { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EnglishFilmActors> . } } '}
qald-6,train,303,Who is the youngest Pulitzer Prize winner?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Pulitzer_Prize> .  ?uri <http://dbpedia.org/ontology/birthDate> ?d . } ORDER BY DESC(?d) OFFSET 0 LIMIT 1 '}
qald-6,train,304,Which animals are critically endangered?,"{'sparql': ""SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Animal> .  ?uri <http://dbpedia.org/ontology/conservationStatus> 'CR'^^<http://www.w3.org/2001/XMLSchema#string> . } ""}"
qald-6,train,313,Which frequent flyer program has the most airlines?,{'sparql': 'SELECT ?uri WHERE {  ?airline <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline> .  ?airline <http://dbpedia.org/property/frequentFlyer> ?uri.  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/FrequentFlyerPrograms> . } ORDER BY DESC(COUNT(DISTINCT ?airline)) OFFSET 0 LIMIT 1 '}
qald-6,train,312,In which city is Air China headquartered?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Air_China> <http://dbpedia.org/ontology/headquarter> ?uri .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/City108524735> . } '}
qald-6,train,314,Which artists were born on the same date as Rachel Stevens?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> . <http://dbpedia.org/resource/Rachel_Stevens> <http://dbpedia.org/property/dateOfBirth> ?date . ?uri <http://dbpedia.org/property/dateOfBirth> ?date . } '}
qald-6,train,315,How many scientists graduated from an Ivy League university?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist> . ?uri <http://dbpedia.org/ontology/almaMater> ?university . ?university <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Ivy_League> . } '}
qald-6,train,322,How many companies were founded by the founder of Facebook?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/foundedBy> ?uri .  ?uri <http://dbpedia.org/ontology/foundedBy> ?uri . } '}
qald-6,train,323,How many companies were founded in the same year as Google?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company> .  ?uri <http://dbpedia.org/ontology/foundingYear> ?year .  <http://dbpedia.org/resource/Google> <http://dbpedia.org/ontology/foundingYear> ?year . } '}
qald-6,train,324,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/TUI_Travel> <http://dbpedia.org/ontology/subsidiary> ?uri .  ?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_Airport> . ?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Dublin_Airport> . } '}
qald-6,train,326,Give me all spacecrafts that flew to Mars.,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Spacecraft> .  ?uri <http://dbpedia.org/property/planet> <http://dbpedia.org/resource/Mars> . } '}
qald-6,train,332,What does the abbreviation FIFA stand for?,{'sparql': 'SELECT DISTINCT ?name WHERE {  <http://dbpedia.org/resource/FIFA> <http://dbpedia.org/property/name> ?name . } '}
qald-6,train,336,Desserts from which country contain fish?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Dessert> .  ?x <http://dbpedia.org/ontology/origin> ?uri .  ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Fish> . } '}
qald-6,train,340,What is the height difference between Mount Everest and K2?,{'sparql': 'SELECT DISTINCT (?h1-?h2) WHERE {  <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/elevation> ?h1 .  <http://dbpedia.org/resource/K2> <http://dbpedia.org/ontology/elevation> ?h2 . } '}
qald-6,train,342,In which city were the parents of Che Guevara born?,{}
qald-6,train,344,Are Taiko a kind of Japanese musical instruments?,{'sparql': 'ASK WHERE {  <http://dbpedia.org/resource/Taiko> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseMusicalInstruments> . } '}
qald-6,train,347,Who were the parents of Queen Victoria?,{'sparql': 'SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Queen_Victoria> <http://dbpedia.org/ontology/parent> ?uri . } '}
qald-1,test,23,"
Which presidents of the United States had more than three children?
","
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX yago: <http://dbpedia.org/class/yago/>
SELECT DISTINCT ?uri ?string
WHERE 
{
	?uri rdf:type yago:PresidentsOfTheUnitedStates .
        ?uri onto:child ?child .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
} HAVING (count(?child) > 3)
"
qald-1,test,3,"
Give me the official websites of actors of the television show Charmed.
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX onto: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri
WHERE
{ 
	?film rdf:type onto:TelevisionShow .
        ?film rdfs:label 'Charmed'@en .
        ?film onto:starring ?actors .
        ?actors foaf:homepage ?uri .
}
"
qald-1,test,37,"
Who is the daughter of Bill Clinton married to?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string
WHERE 
{
        res:Bill_Clinton onto:child ?child .
        ?child dbpedia2:spouse ?string .
        ?uri rdfs:label ?string .
}
"
qald-1,test,43,"
Which river does the Brooklyn Bridge cross?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri ?string
WHERE 
{       
        res:Brooklyn_Bridge dbpedia2:crosses ?string . 
        ?uri dbpedia2:name ?string .
}
"
qald-1,test,21,"
How many monarchical countries are there in Europe?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT COUNT(DISTINCT ?uri)
WHERE 
{
	?uri rdf:type yago:EuropeanCountries .
        ?uri onto:governmentType ?govern .
        FILTER regex(?govern,'monarchy') .
}
"
qald-1,test,7,"
Where did Abraham Lincoln die?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string
WHERE
{ 
        res:Abraham_Lincoln onto:deathPlace ?uri .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,10,"
Is the wife of President Obama called Michelle?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK
WHERE 
{
        res:Barack_Obama onto:spouse ?spouse .
        ?spouse rdfs:label ?name .
        FILTER(regex(?name,'Michelle')) 
}
"
qald-1,test,28,"
Which states of Germany are governed by the Social Democratic Party?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX yago: <http://dbpedia.org/class/yago/>
SELECT DISTINCT ?uri ?string 
WHERE
{
        ?uri rdf:type yago:StatesOfGermany .
        ?uri onto:leaderParty res:Social_Democratic_Party_of_Germany .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,39,"
Which U.S. states possess gold minerals?
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia2: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri ?string
WHERE 
{
        ?uri rdf:type yago:StatesOfTheUnitedStates .
        ?uri dbpedia2:mineral ?mineral .
        FILTER (regex(?mineral,'Gold')) .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,50,"
In which country does the Nile start?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?uri ?string
WHERE 
{       
        res:Nile onto:sourceCountry ?uri .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,44,"
Which locations have more than two caves?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string
WHERE 
{       
        ?cave rdf:type onto:Cave . 
        ?cave onto:location ?uri .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
} HAVING (count(?cave) > 2)
"
qald-1,test,30,"
Is proinsulin a protein?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX onto: <http://dbpedia.org/ontology/>
ASK
WHERE 
{
	res:Proinsulin rdf:type onto:Protein .
}
"
qald-1,test,12,"
Which classis does the Millepede belong to?
","
PREFIX dbpedia2: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?string
WHERE
{
       res:Millipede dbpedia2:classis ?string .
}
"
qald-1,test,49,"
How tall is Claudia Schiffer?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX onto: <http://dbpedia.org/ontology/>
SELECT ?number
WHERE 
{       
        res:Claudia_Schiffer onto:height ?number .      
}
"
qald-1,test,33,"
Who created Goofy?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX prop: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri ?string
WHERE 
{
        res:Goofy prop:creator ?string .
        ?uri prop:name ?string .
}
"
qald-1,test,4,"
Give me the capitals of all U.S. states.
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX yago: <http://dbpedia.org/class/yago/>
SELECT DISTINCT ?uri ?string
WHERE
{ 
	?states rdf:type yago:StatesOfTheUnitedStates .
        ?states onto:capital ?uri .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,18,"
Give me all cities in New Jersey with more than 100000 inhabitants.
","
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia2: <http://dbpedia.org/property/>
PREFIX onto: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri ?string
WHERE 
{
	?uri rdf:type onto:City .
        ?uri dbpedia2:subdivisionName ?location .
        FILTER (regex(?location, 'New Jersey')) .
        ?uri dbpedia2:populationTotal ?inhabitants .
        FILTER (?inhabitants > 100000) .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,31,"
Which museum exhibits The Scream by Munch?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?uri ?string
WHERE 
{
	res:The_Scream dbpedia2:museum ?string .
        OPTIONAL { ?uri rdfs:label ?string. }
}
"
qald-1,test,35,"
Is Egypts largest city also its capital?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX onto: <http://dbpedia.org/ontology/>
ASK
WHERE 
{
        res:Egypt onto:largestCity ?large .
        res:Egypt onto:capital ?capital .
        FILTER (?large = ?capital)
}
"
qald-1,test,27,"
What is the revenue of IBM?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?number
WHERE 
{
	res:IBM onto:revenue ?number .
}
"
qald-1,test,38,"
Which states border Utah?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>
PREFIX yago: <http://dbpedia.org/class/yago/>
SELECT DISTINCT ?uri ?string
WHERE 
{
         {res:Kansas dbpedia2:north ?string.}
         UNION
         {res:Kansas dbpedia2:northeast ?string.}
         UNION
         {res:Kansas dbpedia2:south ?string.}
         UNION
         {res:Kansas dbpedia2:southeast ?string.}
         UNION
         {res:Kansas dbpedia2:east ?string.}
         UNION
         {res:Kansas dbpedia2:west ?string.}
         OPTIONAL { ?uri rdf:type yago:StatesOfTheUnitedStates .
                    ?uri dbpedia2:name ?string . }
}
"
qald-1,test,13,"
In which country is the Limerick Lake?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri ?string
WHERE
{ 
	res:Limerick_Lake onto:country ?uri .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,test,32,"
Which television shows were created by Walt Disney?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri ?string
WHERE 
{
	?uri rdf:type onto:TelevisionShow .
        ?uri onto:creator res:Walt_Disney .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,45,"
Which mountain is the highest after the Annapurna?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?uri ?string
WHERE 
{       
        res:Annapurna onto:elevation ?elev .
        ?uri rdf:type onto:Mountain . 
        ?uri onto:elevation ?all .
        FILTER (?all < ?elev) .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') } 
} ORDER BY DESC(?all) LIMIT 1
"
qald-1,test,29,"
In which films directed by Garry Marshall was Julia Roberts starring?
","
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri ?string
WHERE 
{
	?uri rdf:type onto:Film .
        ?uri onto:starring res:Julia_Roberts .
        ?uri onto:director res:Garry_Marshall .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,42,"
Which bridges are of the same type as the Manhattan Bridge?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri ?string
WHERE 
{       
        ?uri rdf:type onto:Bridge .
        ?uri dbpedia2:design ?design .
        res:Manhattan_Bridge dbpedia2:design ?manha . 
        FILTER (regex(?design, ?manha)).
        FILTER (?uri != res:Manhattan_Bridge) . 
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,14,"
Was U.S. president Jackson involved in a war?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia2: <http://dbpedia.org/property/>
ASK
WHERE 
{
	?uri rdf:type yago:PresidentsOfTheUnitedStates .
        ?uri dbpedia2:name ?name .
        FILTER (regex(?name, 'Jackson')) .
        OPTIONAL {?uri onto:battle ?battle .}
        FILTER BOUND(?battle).        
}
"
qald-1,test,20,"
Which European countries are a constitutional monarchy?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri ?string
WHERE 
{
	?uri rdf:type yago:EuropeanCountries .
        ?uri onto:governmentType res:Constitutional_monarchy .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,40,"
Who is the author of WikiLeaks?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX onto: <http://dbpedia.org/ontology/>
SELECT ?uri ?string
WHERE 
{
        res:WikiLeaks onto:author ?uri .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,17,"
Which state of the United States of America has the highest density?
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia2: <http://dbpedia.org/property/>
SELECT ?uri ?string
WHERE 
{
	?uri rdf:type yago:StatesOfTheUnitedStates .
        ?uri dbpedia2:densityrank ?density
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
} ORDER BY ASC(?density) LIMIT 1
"
qald-1,test,19,"
What is the currency of the Czech Republic?
","
PREFIX dbpedia2: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?uri ?string
WHERE 
{
	res:Czech_Republic dbpedia2:currency ?string .
        ?uri rdfs:label ?string .
}
"
qald-1,test,22,"
Which countries in the European Union adopted the Euro?
","
PREFIX dbpedia2: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri ?string
WHERE 
{
	?uri rdf:type yago:EuropeanUnionMemberStates .
        { ?uri dbpedia2:currency res:Euro . } 
        UNION 
        { ?uri dbpedia2:currencyCode ?code . FILTER regex(?code,'EUR') }
        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,11,"
What is the area code of Berlin?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?string
WHERE 
{
	res:Berlin onto:areaCode ?string .
}
"
qald-1,test,9,"
Which countries have more than two official languages?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string
WHERE
{ 
	?uri  rdf:type onto:Country  .
        ?uri onto:officialLanguage ?language .
	OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
} HAVING (count(?language) > 2)
"
qald-1,test,16,"
Who is the owner of Universal Studios?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?uri ?string
WHERE 
{
	res:Universal_Studios onto:owner ?uri .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,34,"
Through which countries does the Yenisei river flow?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri ?string
WHERE 
{
        res:Yenisei_River dbpedia2:country ?string .
        OPTIONAL { ?uri dbpedia2:commonName ?name . }
        FILTER regex(?name,?string) .
        OPTIONAL { ?uri dbpedia2:dateEnd ?date . }
        FILTER (!BOUND(?date))
}
"
qald-1,test,48,"
When did Germany join the EU?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>
SELECT ?date
WHERE 
{       
        res:Germany dbpedia2:accessioneudate ?date .      
}
"
qald-1,test,36,"
Which monarchs of the United Kingdom were married to a German?
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri ?string
WHERE 
{
        ?uri rdf:type yago:MonarchsOfTheUnitedKingdom .
        { ?uri onto:spouse ?spouse . } UNION { ?spouse onto:spouse ?uri . }
        ?spouse onto:birthPlace res:Germany.
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,8,"
When was the Battle of Gettysburg?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX onto: <http://dbpedia.org/ontology/>
SELECT ?string
WHERE
{ 
       res:Battle_of_Gettysburg onto:date ?string .
}
"
qald-1,test,24,"
What is the highest mountain in Germany?
","
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX onto: <http://dbpedia.org/ontology/>
SELECT ?uri ?string
WHERE 
{
	?uri rdf:type onto:Mountain .
        ?uri onto:elevation ?elevation .
        ?uri onto:locatedInArea ?area .
        FILTER (regex(?area,'Germany')) .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
} ORDER BY DESC(?elevation) LIMIT 1
"
qald-1,test,26,"
Give me all soccer clubs in Spain.
","
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX prop: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri ?string
WHERE 
{
	?uri rdf:type onto:SoccerClub .
        { ?uri onto:ground ?ground . }
        UNION 
        { ?uri prop:ground ?ground . }
        FILTER (regex(?ground, 'Spain')) .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,5,"
What are the official languages of the Philippines?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string
WHERE
{ 
        res:Philippines onto:officialLanguage ?uri .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,6,"
Who is the mayor of New York City?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?uri ?string
WHERE
{ 
        res:New_York_City onto:leaderName ?uri .
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,41,"
Who designed the Brooklyn Bridge?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri ?string 
WHERE 
{
        res:Brooklyn_Bridge dbpedia2:designer ?string .
        ?uri dbpedia2:name ?string .
}
"
qald-1,test,2,"
Which telecommunications organizations are located in Belgium?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia2: <http://dbpedia.org/property/>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?uri ?string
WHERE
{ 	
	?uri  rdf:type onto:Organisation  .
	?uri dbpedia2:industry ?indus .
	{ ?uri onto:location res:Belgium. } 
        UNION { ?uri dbpedia2:location res:Belgium. }
        UNION { ?uri dbpedia2:locationCountry 'Belgium'@en . }
        FILTER (regex(?indus, 'Telecommunication')) .
	OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,test,15,"
What is the profession of Frank Herbert?
","
PREFIX dbpedia2: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?string
WHERE 
{
	res:Frank_Herbert dbpedia2:occupation ?string .
}
"
qald-1,test,46,"
What is the highest place of Karakoram?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?uri ?string
WHERE 
{       
        res:Karakoram onto:highestPlace ?uri .  
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,test,25,"
Give me the homepage of Forbes.
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT DISTINCT ?uri
WHERE 
{
	res:Forbes foaf:homepage ?uri .
}
"
qald-1,test,1,"
Which companies are in the computer software industry?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia2: <http://dbpedia.org/property/>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri ?string
WHERE
{ 
	?uri  rdf:type onto:Company  .
        ?uri dbpedia2:industry ?indus .
        FILTER regex(?indus,'Computer') .
        FILTER regex(?indus,'software','i') .
        OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,test,47,"
What did Bruce Carver die from?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX onto: <http://dbpedia.org/ontology/>
SELECT ?uri ?string
WHERE 
{       
        res:Bruce_Carver onto:deathCause ?uri .     
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-5,train,103,Who is the mayor of Berlin?," 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        res:Berlin dbo:leader ?uri . 
} 

"
qald-5,train,127,Sean Parnell is the governor of which U.S. state?," 
PREFIX yago: <http://dbpedia.org/class/yago/> 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri rdf:type yago:StatesOfTheUnitedStates . 
        ?uri dbp:governor res:Sean_Parnell . 
} 

"
qald-5,train,90,When was Capcom founded?,"
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date 
WHERE {
        res:Capcom dbo:foundingDate ?date .
}
"
qald-5,train,206,When was Carlo Giuliani shot?,"
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date
WHERE {
        res:Death_of_Carlo_Giuliani dbp:dateOfDeath ?date .
}
"
qald-5,train,301,Who was vice president under the president who authorized atomic weapons against Japan during World War II?, 
qald-5,train,302,In which town was the assassin of Martin Luther King born?, 
qald-5,train,303,Which anti-apartheid activist was born in Mvezo?, 
qald-5,train,304,How many Golden Globe awards did the daughter of Henry Fonda win?, 
qald-5,train,305,Which recipients of the Victoria Cross died in the Battle of Arnhem?, 
qald-5,train,306,Where did the first man in space die?, 
qald-5,train,307,How old was Steve Jobs' sister when she first met him?, 
qald-5,train,308,Which members of the Wu-Tang Clan took their stage name from a movie?, 
qald-5,train,309,Which writers had influenced the philosopher that refused a Nobel Prize?, 
qald-5,train,310,Under which king did the British prime minister that signed the Munich agreement serve?, 
qald-5,train,311,Who composed the music for the film that depicts the early life of Jane Austin?, 
qald-5,train,312,Who succeeded the pope that reigned only 33 days?, 
qald-5,train,313,On which island did the national poet of Greece die?, 
qald-5,train,314,Which horses did The Long Fellow ride?, 
qald-5,train,315,"Of the people that died of radiation in Los Alamos, whose death was an accident?", 
qald-5,train,316,Which building owned by the Bank of America was featured in the TV series MegaStructures?, 
qald-5,train,317,"Which buildings in art deco style did Shreve, Lamb and Harmon design?", 
qald-5,train,318,Which birds are protected under the National Parks and Wildlife Act?, 
qald-5,train,319,Which country did the first known photographer of snowflakes come from?, 
qald-5,train,320,List all the battles commanded by the lover of Cleopatra., 
qald-5,train,321,Are the Rosetta Stone and the Gayer-Andersen cat exhibited in the same museum?, 
qald-5,train,322,Which actress starring in the TV series Friends owns the production company Coquette Productions?, 
qald-5,train,323,Gaborone is the capital of which country member of the African Union?, 
qald-5,train,324,When was the composer of the opera Madame Butterfly born?, 
qald-5,train,325,Which street basketball player was diagnosed with Sarcoidosis?, 
qald-5,train,326,For which movie did the daughter of Francis Ford Coppola receive an Oscar?, 
qald-5,train,327,Which city does the first person to climb all 14 eight-thousanders come from?, 
qald-5,train,328,At which college did the only American actor that received the César Award study?, 
qald-5,train,329,Did Napoleon's first wife die in France?, 
qald-5,train,330,How old is James Bond in the latest Bond book by William Boyd?, 
qald-5,train,331,What eating disorder is characterized by an appetite for substances such as clay and sand?, 
qald-5,train,332,What is the native city of Hollywood's highest-paid actress?, 
qald-5,train,333,In which city does the former main presenter of the Xposé girls live?, 
qald-5,train,334,Who plays Phileas Fogg in the adaptation of Around the World in 80 Days directed by Buzz Kulik?, 
qald-5,train,335,Who is the front man of the band that wrote Coffee & TV?, 
qald-5,train,336,Which Chinese-speaking country is a former Portguese colony?, 
qald-5,train,337,What is the largest city in the county in which Faulkner spent most of his life?, 
qald-5,train,338,"In which year did the Hungarian-American actor called ""The King of Horror"" make his first film?", 
qald-5,train,339,Under which pseudonym did Charles Dickens publish some of his books?, 
qald-5,train,340,A landmark of which city is the home of the Mona Lisa?, 
qald-4,train,123,Do Prince Harry and Prince William have the same mother?," 
PREFIX dbp: <http://dbpedia.org/property/> 
ASK 
WHERE { 
        <http://dbpedia.org/resource/Prince_William,_Duke_of_Cambridge> dbp:mother ?x . 
        <http://dbpedia.org/resource/Prince_Harry_of_Wales> dbp:mother ?y . 
        FILTER (?x = ?y) 
} 
"
qald-4,train,161,How many space missions have there been?," 
PREFIX dbo: <http://dbpedia.org/ontology/> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
SELECT COUNT(DISTINCT ?uri) 
WHERE { 
        ?uri rdf:type dbo:SpaceMission . 
} 
"
qald-4,train,177,Who was called Scarface?," 
PREFIX dbp: <http://dbpedia.org/property/> 
PREFIX res: <http://dbpedia.org/resource/> 
SELECT DISTINCT ?uri 
WHERE { 
        ?uri dbp:nickname res:Scarface . 
} 
"
qald-4,train,193,Which movies did Kurosawa direct after Rashomon?,"
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Film .
        ?uri dbo:director res:Akira_Kurosawa .
      { ?uri dbo:releaseDate ?x . } 
      UNION 
      { ?uri dbp:released ?x . }
        res:Rashomon dbo:releaseDate ?y .
        FILTER (?y > ?x)
}
"
qald-4,train,29,Which awards did WikiLeaks win?,"
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri
WHERE {
        res:WikiLeaks dbp:awards ?uri .
}
"
qald-4,train,75,Who was the first president of the United States?,"
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
         ?uri rdf:type dbo:Person .
         ?uri dbo:office '1st President of the United States'@en .
}
"
qald-4,train,96,Is Jens Friebe a vegan?,OUT OF SCOPE
qald-4,train,99,Give me all animal species that live in the Teutoburg Forest.,OUT OF SCOPE
qald-6,test,4,Who was on the Apollo 11 mission?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apollo_11> <http://dbpedia.org/property/crewMembers> ?uri . }'}
qald-6,test,7,What is the atmosphere of the Moon composed of?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moon> <http://dbpedia.org/property/atmosphereComposition> ?uri . }'}
qald-6,test,11,What is the name of the school where Obama's wife studied?,{'sparql': 'SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Barack_Obama> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/property/almaMater> ?s . } '}
qald-6,test,12,Where does Piccadilly start?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Piccadilly>. } '}
qald-6,test,14,When did the Boston Tea Party take place?,{'sparql': 'SELECT DISTINCT ?d WHERE { <http://dbpedia.org/resource/Boston_Tea_Party> <http://dbpedia.org/property/date> ?d . } '}
qald-6,test,16,Who wrote Harry Potter?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Potter> <http://dbpedia.org/property/author> ?uri . } '}
qald-6,test,17,Which actors play in Big Bang Theory?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Big_Bang_Theory> <http://dbpedia.org/ontology/starring> ?uri . } '}
qald-6,test,19,Who is the most powerful Jedi?,{}
qald-6,test,20,How many goals did Pelé score?,{}
qald-6,test,22,Which computer scientist won an oscar?,"{'sparql': ""SELECT DISTINCT ?uri WHERE { { ?uri <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Computer_science> . } UNION { ?uri <http://purl.org/dc/elements/1.1/description> ?s . FILTER regex(?s,'computer scientist','i') } ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Academy_Awards> . } ""}"
qald-6,test,26,Who does the voice of Bart Simpson?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bart_Simpson> <http://dbpedia.org/property/voiceactor> ?uri . }'}
qald-6,test,31,Which country was Bill Gates born in?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bill_Gates> <http://dbpedia.org/ontology/birthPlace> ?x . ?x <http://dbpedia.org/ontology/country> ?uri . }'}
qald-6,test,34,How many grand-children did Jacques Cousteau have?,{'sparql': 'SELECT COUNT(DISTINCT ?y) WHERE { <http://dbpedia.org/resource/Jacques_Cousteau> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/child> ?y . }'}
qald-6,test,37,How many seats does the home stadium of FC Porto have?,{'sparql': 'SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/FC_Porto> <http://dbpedia.org/ontology/ground> ?x . ?x <http://dbpedia.org/ontology/seatingCapacity> ?n . } '}
qald-6,test,41,In which city was the president of Montenegro born?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/office> <http://dbpedia.org/resource/President_of_Montenegro> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri . ?uri a <http://dbpedia.org/ontology/City> . } '}
qald-6,test,44,What is the full name of Prince Charles?,"{'sparql': 'SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Charles,_Prince_of_Wales> <http://dbpedia.org/ontology/alias> ?s . } '}"
qald-6,test,45,What is the longest river in China?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> . ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/China> . ?uri <http://dbpedia.org/property/length> ?l . } ORDER BY DESC(?l) OFFSET 0 LIMIT 1'}
qald-6,test,47,When did princess Diana die?,"{'sparql': 'SELECT DISTINCT ?d WHERE { <http://dbpedia.org/resource/Diana,_Princess_of_Wales> <http://dbpedia.org/ontology/deathDate> ?d . }'}"
qald-6,test,48,What do ants eat?,{}
qald-6,test,50,How many moons does Mars have?,{'sparql': 'SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Mars> <http://dbpedia.org/property/satellites> ?n . } '}
qald-6,test,53,Give me a list of all Canadians that reside in the U.S.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Canada> . ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/United_States> . } '}
qald-6,test,57,When did the Dodo become extinct?,{'sparql': 'SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Dodo> <http://dbpedia.org/property/extinct> ?s . } '}
qald-6,test,58,Show me all Czech movies.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> . } '}
qald-6,test,59,Which rivers flow into the North Sea?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea> . } '}
qald-6,test,63,Give me a list of all critically endangered birds.,"{'sparql': ""SELECT DISTINCT ?uri ?p WHERE { ?uri a <http://dbpedia.org/ontology/Bird> . { ?uri <http://dbpedia.org/ontology/conservationStatus> 'CR'^^<http://www.w3.org/2001/XMLSchema#string> . } UNION { ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Critically_endangered_animals> . } }""}"
qald-6,test,65,What was the original occupation of the inventor of Lego?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lego> <http://dbpedia.org/property/inventor> ?x . ?x <http://dbpedia.org/property/occupation> ?uri . } '}
qald-6,test,66,Which countries have more than ten volcanoes?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?x a <http://dbpedia.org/ontology/Volcano> . ?x <http://dbpedia.org/ontology/locatedInArea> ?uri . ?uri a <http://dbpedia.org/ontology/Country> . } GROUP BY ?uri HAVING (COUNT(?x) > 10) '}
qald-6,test,67,Show me all U.S. states.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> . } '}
qald-6,test,69,How many calories does a baguette have?,{'sparql': 'SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Baguette> <http://dbpedia.org/ontology/approximateCalories> ?n. }'}
qald-6,test,70,Can you cry underwater?,{}
qald-6,test,72,How many emperors did China have?,{'sparql': 'SELECT COUNT(DISTINCT ?uri) WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Emperor_of_China> . }'}
qald-6,test,73,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/trailheads> <http://dbpedia.org/resource/Grand_Canyon> . FILTER NOT EXISTS { ?uri <http://dbpedia.org/property/hazards> <http://dbpedia.org/resource/Flash_flood> . } }'}
qald-6,test,75,How did Michael Jackson die?,{'sparql': 'SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Michael_Jackson> <http://dbpedia.org/property/deathCause> ?s . }'}
qald-6,test,76,Which space probes were sent into orbit around the sun?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/satelliteOf> <http://dbpedia.org/resource/Sun> . }'}
qald-6,test,77,When was Coca Cola invented?,{'sparql': 'SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Coca-Cola> <http://dbpedia.org/property/introduced> ?n . } '}
qald-6,test,79,On which day is Columbus Day?,{'sparql': 'SELECT DISTINCT ?d WHERE { <http://dbpedia.org/resource/Columbus_Day> <http://dbpedia.org/property/date> ?d . } '}
qald-6,test,80,How short is the shortest active NBA player?,{'sparql': 'SELECT DISTINCT ?n WHERE { ?x a <http://dbpedia.org/ontology/BasketballPlayer> . ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association> . ?x <http://dbpedia.org/ontology/height> ?n . FILTER NOT EXISTS { ?x <http://dbpedia.org/ontology/activeYearsEndYear> ?d . } } ORDER BY ASC(?n) OFFSET 0 LIMIT 1'}
qald-6,test,81,Whom did Lance Bass marry?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Lance_Bass> . } '}
qald-6,test,84,What color expresses loyalty?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/connotation> <http://dbpedia.org/resource/Loyalty> . }'}
qald-6,test,86,Give me all South American countries.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/class/yago/SouthAmericanCountries> . }'}
qald-6,test,94,What are the names of the Teenage Mutant Ninja Turtles?,{'sparql': 'SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles> <http://dbpedia.org/property/members> ?x . ?x <http://dbpedia.org/property/characterName> ?s . }'}
qald-6,test,95,What are the zodiac signs?,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/element> <http://dbpedia.org/resource/Astrological_sign> . }'}
qald-6,test,96,What languages do they speak in Pakistan?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pakistan> <http://dbpedia.org/ontology/language> ?uri . }'}
qald-6,test,97,Who became president after JFK died?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/property/presidentEnd> ?x . ?uri <http://dbpedia.org/property/presidentStart> ?x . }'}
qald-6,test,99,What is Elon Musk famous for?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elon_Musk> <http://dbpedia.org/ontology/knownFor> ?uri . }'}
qald-6,test,100,What is Batman's real name?,{'sparql': 'SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Batman> <http://dbpedia.org/property/alterEgo> ?s . }'}
qald-3,test,1,"
Which German cities have more than 250000 inhabitants?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	{ ?uri rdf:type dbo:City . } UNION { ?uri rdf:type dbo:Town . }
        ?uri dbo:country res:Germany .
	?uri dbo:populationTotal ?population .
	FILTER ( ?population > 250000 ) 
}
"
qald-3,test,2,"
Who was the successor of John F. Kennedy?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:John_F._Kennedy dbo:successor ?uri .
}
"
qald-3,test,3,"
Who is the mayor of Berlin?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri 
WHERE {
	res:Berlin dbo:leader ?uri .
}
"
qald-3,test,4,"
How many students does the Free University in Amsterdam have?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?num 
WHERE {
	res:Vrije_Universiteit dbo:numberOfStudents ?num .
}
"
qald-3,test,5,"
What is the second highest mountain on Earth?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	?uri rdf:type dbo:Mountain .
	?uri dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation) OFFSET 1 LIMIT 1
"
qald-3,test,6,"
Give me all professional skateboarders from Sweden.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	?uri dbo:occupation res:Skateboarding . 
        { ?uri dbo:birthPlace res:Sweden . }
        UNION
        { ?uri dbo:birthPlace ?place . 
          ?place dbo:country res:Sweden . }
}
"
qald-3,test,7,"
When was Alberta admitted as province?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date 
WHERE {
	res:Alberta dbp:admittancedate ?date .
}
"
qald-3,test,8,"
To which countries does the Himalayan mountain system extend?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Himalayas dbp:country ?uri .
}
"
qald-3,test,9,"
Give me a list of all trumpet players that were bandleaders.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
	?uri dbo:occupation res:Bandleader .
	?uri dbo:instrument res:Trumpet . 
}
"
qald-3,test,10,"
What is the total amount of men and women serving in the FDNY?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?num 
WHERE {
	res:New_York_City_Fire_Department dbp:strength ?num .
}
"
qald-3,test,11,"
Who is the Formula 1 race driver with the most races?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:FormulaOneRacer .
	?uri dbo:races ?x .
}
ORDER BY DESC(?x) OFFSET 0 LIMIT 1
"
qald-3,test,12,"
Give me all world heritage sites designated within the past five years.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	?uri rdf:type dbo:WorldHeritageSite .
	?uri dbp:year ?x .
	FILTER ( ?x >= ""2008""^^xsd:integer)
}
"
qald-3,test,13,"
Who is the youngest player in the Premier League?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	?uri dbo:team ?x .
	?x dbo:league res:Premier_League .
	?uri dbo:birthDate ?y .
}
ORDER BY DESC(?y) OFFSET 0 LIMIT 1
"
qald-3,test,14,"
Give me all members of Prodigy.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:The_Prodigy dbo:bandMember ?uri .
}
"
qald-3,test,15,"
What is the longest river?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:River .
        ?uri dbp:length ?x .
}
ORDER BY DESC(?x) OFFSET 0 LIMIT 1
"
qald-3,test,16,"
Does the new Battlestar Galactica series have more episodes than the old one?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
	<http://dbpedia.org/resource/Battlestar_Galactica_%281978_TV_series%29> dbo:numberOfEpisodes ?x .
	<http://dbpedia.org/resource/Battlestar_Galactica_%282004_TV_series%29> dbo:numberOfEpisodes ?y .
	FILTER (?y > ?x)
}
"
qald-3,test,17,"
Give me all cars that are produced in Germany.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Automobile .   
        { ?uri dbp:production res:Germany . } UNION { ?uri dbp:assembly res:Germany . }
        UNION { ?uri dbp:manufacturer ?x .  
        { ?x dbo:locationCountry res:Germany . } UNION { ?x rdf:type yago:AutomotiveCompaniesOfGermany . } }
}
"
qald-3,test,19,"
Give me all people that were born in Vienna and died in Berlin.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        ?uri dbo:birthPlace res:Vienna .
        ?uri dbo:deathPlace res:Berlin .
}
"
qald-3,test,20,"
How tall is Michael Jordan?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?num 
WHERE {
        res:Michael_Jordan dbo:height ?num .
}
"
qald-3,test,21,"
What is the capital of Canada?
","
PREFIX dbo:  <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:Canada dbo:capital ?uri .
}
"
qald-3,test,22,"
Who is the governor of Wyoming?
","
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri 
WHERE {
        res:Wyoming dbp:governor ?uri .
}
"
qald-3,test,23,"
Do Prince Harry and Prince William have the same mother?
","
PREFIX dbp: <http://dbpedia.org/property/>
ASK 
WHERE {       
        <http://dbpedia.org/resource/Prince_William,_Duke_of_Cambridge> dbp:mother ?x .  
	<http://dbpedia.org/resource/Prince_Harry_of_Wales> dbp:mother ?y . 
	FILTER (?x = ?y)
}
"
qald-3,test,24,"
Who was the father of Queen Elizabeth II?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri
WHERE { 
        res:Elizabeth_II dbp:father ?uri .
}
"
qald-3,test,25,"
Which U.S. state has been admitted latest?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE { 
	?uri rdf:type yago:StatesOfTheUnitedStates .
	?uri dbp:admittancedate ?x .
}
ORDER BY DESC(?x) OFFSET 0 LIMIT 1
"
qald-3,test,26,"
How many official languages are spoken on the Seychelles?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT COUNT(DISTINCT ?x) 
WHERE {
        res:Seychelles dbo:officialLanguage ?x .
}
"
qald-3,test,27,"
Sean Parnell is the governor of which U.S. state?
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type yago:StatesOfTheUnitedStates .
        ?uri dbp:governor res:Sean_Parnell .
}
"
qald-3,test,28,"
Give me all movies directed by Francis Ford Coppola.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:Film .
        ?uri dbo:director res:Francis_Ford_Coppola .
}
"
qald-3,test,29,"
Give me all actors starring in movies directed by and starring William Shatner.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        ?x dbo:director res:William_Shatner .
        ?x dbo:starring res:William_Shatner .
        { ?x dbo:starring ?uri . } UNION { ?x dbp:starring ?uri . }
}
"
qald-3,test,30,"
What is the birth name of Angela Merkel?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?string 
WHERE { 
	res:Angela_Merkel dbp:birthName ?string .
}
"
qald-3,test,31,"
Give me all current Methodist national leaders.
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	?uri rdf:type yago:CurrentNationalLeaders .
	?uri dbp:religion res:Methodism .
}
"
qald-3,test,32,"
How often did Nicole Kidman marry?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT COUNT(DISTINCT ?x) 
WHERE {       
        res:Nicole_Kidman dbo:spouse ?x .
}
"
qald-3,test,33,"
Give me all Australian nonprofit organizations.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {       
        ?uri dbo:type res:Nonprofit_organization .
        { ?uri dbo:locationCountry res:Australia . }
        UNION
        { ?uri dbo:location ?x . 
          ?x dbo:country res:Australia . }
}
"
qald-3,test,34,"
In which military conflicts did Lawrence of Arabia participate?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:T._E._Lawrence dbo:battle ?uri .
}
"
qald-3,test,35,"
Who developed Minecraft?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Minecraft dbo:developer ?uri .
}
"
qald-3,test,36,"
What is the melting point of copper?
","
OUT OF SCOPE
"
qald-3,test,37,"
Give me all sister cities of Brno.
","
OUT OF SCOPE
"
qald-3,test,38,"
How many inhabitants does Maribor have?
","
PREFIX dbo:  <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
SELECT DISTINCT ?num 
WHERE {
        res:Maribor dbo:populationTotal ?num .
}
"
qald-3,test,39,"
Give me all companies in Munich.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {	
        ?uri rdf:type dbo:Company .
	{ ?uri dbo:location res:Munich . } 
        UNION 
        { ?uri dbo:headquarter res:Munich . } 
        UNION 
        { ?uri dbo:locationCity res:Munich . }
}
"
qald-3,test,40,"
List all games by GMT.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {	
        ?uri dbo:publisher res:GMT_Games .
}
"
qald-3,test,41,"
Who founded Intel?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri 
WHERE {
	res:Intel dbo:foundedBy ?uri . 
}
"
qald-3,test,42,"
Who is the husband of Amanda Palmer?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Amanda_Palmer dbp:spouse ?uri . 
}
"
qald-3,test,43,"
Give me all breeds of the German Shepherd dog.
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	?uri dbp:breed res:German_Shepherd .
}
"
qald-3,test,44,"
Which cities does the Weser flow through?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
	res:Weser dbo:city ?uri .
}
"
qald-3,test,45,"
Which countries are connected by the Rhine?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Rhine dbo:country ?uri .
}
"
qald-3,test,46,"
Which professional surfers were born on the Philippines?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
	?uri dbo:occupation res:Surfing .
	?uri dbo:birthPlace res:Philippines .
}
"
qald-3,test,47,"
What is the average temperature on Hawaii?
","
OUT OF SCOPE
"
qald-3,test,48,"
In which UK city are the headquarters of the MI6?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri 
WHERE {
	res:Secret_Intelligence_Service dbo:headquarter ?uri .
        ?uri dbo:country res:United_Kingdom .
}
"
qald-3,test,49,"
Which other weapons did the designer of the Uzi develop?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
        ?uri rdf:type dbo:Weapon .
	?uri dbp:designer ?x .
        res:Uzi dbp:designer ?x .
        FILTER (?uri != res:Uzi)
}
"
qald-3,test,50,"
Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
        res:Cuban_Missile_Crisis dbo:date ?x .
	res:Bay_of_Pigs_Invasion dbo:date ?y .
	FILTER (?x < ?y)
}
"
qald-3,test,51,"
Give me all Frisian islands that belong to the Netherlands.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	?uri rdf:type yago:FrisianIslands .
        ?uri dbo:country res:Netherlands .
}
"
qald-3,test,52,"
Who invented the zipper?
","
OUT OF SCOPE
"
qald-3,test,53,"
What is the ruling party in Lisbon?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Lisbon dbp:leaderParty ?uri .
}
"
qald-3,test,54,"
What are the nicknames of San Francisco?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?string 
WHERE {
	res:San_Francisco dbp:nickname ?string .
}
"
qald-3,test,55,"
Which Greek goddesses dwelt on Mount Olympus?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type yago:GreekGoddesses .
	?uri dbp:abode res:Mount_Olympus .
}
"
qald-3,test,56,"
When were the Hells Angels founded?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date 
WHERE {
	res:Hells_Angels dbp:founded ?date .
}
"
qald-3,test,57,"
Give me the Apollo 14 astronauts.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
	?uri dbo:mission res:Apollo_14 .
}
"
qald-3,test,58,"
What is the time zone of Salt Lake City?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri 
WHERE {
	res:Salt_Lake_City dbp:timezone ?uri . 
}
"
qald-3,test,59,"
Which U.S. states are in the same timezone as Utah?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	res:Utah dbp:timezone ?x . 
        ?uri rdf:type yago:StatesOfTheUnitedStates . 
        ?uri dbp:timezone ?x .
        FILTER (?uri != res:Utah)
}
"
qald-3,test,60,"
Give me a list of all lakes in Denmark.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
	{ ?uri rdf:type dbo:Lake .
	  ?uri dbo:country res:Denmark . }
	UNION
	{ ?uri rdf:type yago:LakesOfDenmark . }
}
"
qald-3,test,61,"
How many space missions have there been?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT COUNT(DISTINCT ?uri) 
WHERE {
	?uri rdf:type dbo:SpaceMission .
}
"
qald-3,test,62,"
Did Socrates influence Aristotle?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
	res:Aristotle dbo:influencedBy res:Socrates .
}
"
qald-3,test,63,"
Give me all Argentine films.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        { ?uri rdf:type yago:ArgentineFilms . }
        UNION
	{ ?uri rdf:type dbo:Film .
	{ ?uri dbo:country res:Argentina . } UNION { ?uri dbp:country 'Argentina'@en . } }
}
"
qald-3,test,64,"
Give me all launch pads operated by NASA.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:LaunchPad .
	?uri dbo:operator res:NASA .
}
"
qald-3,test,65,"
Which instruments did John Lennon play?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
        res:John_Lennon dbo:instrument ?uri .
}
"
qald-3,test,66,"
Which ships were called after Benjamin Franklin?
","
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri  
WHERE {
        ?uri dbp:shipNamesake res:Benjamin_Franklin .
}
"
qald-3,test,67,"
Who are the parents of the wife of Juan Carlos I?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Juan_Carlos_I_of_Spain dbo:spouse ?x .
        ?x dbo:parent ?uri .
}
"
qald-3,test,68,"
How many employees does Google have?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?num 
WHERE {
	res:Google dbo:numberOfEmployees ?num .
}
"
qald-3,test,69,"
Did Tesla win a nobel prize in physics?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
        res:Nikola_Tesla dbo:award res:Nobel_Prize_in_Physics .
}
"
qald-3,test,70,"
Is Michelle Obama the wife of Barack Obama?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
	res:Barack_Obama dbo:spouse res:Michelle_Obama .
}
"
qald-3,test,71,"
When was the Statue of Liberty built?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date 
WHERE {
	res:Statue_of_Liberty dbp:beginningDate ?date .
}
"
qald-3,test,72,"
In which U.S. state is Fort Knox located?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
	res:Fort_Knox dbp:location ?uri .
        ?uri dbo:country res:United_States .
} 
"
qald-3,test,73,"
How many children did Benjamin Franklin have?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT COUNT(DISTINCT ?uri) 
WHERE {
	res:Benjamin_Franklin dbo:child ?uri .
}
"
qald-3,test,74,"
When did Michael Jackson die?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date 
WHERE {
	res:Michael_Jackson dbo:deathDate ?date .
}
"
qald-3,test,75,"
Which daughters of British earls died in the same place they were born in?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	?uri rdf:type yago:DaughtersOfBritishEarls .
	?uri dbo:birthPlace ?x .
	?uri dbo:deathPlace ?y .
	FILTER (?x != ?y) .
}
"
qald-3,test,76,"
List the children of Margaret Thatcher.
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri 
WHERE {
	res:Margaret_Thatcher dbo:child ?uri .
}
"
qald-3,test,77,"
Who was called Scarface?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	?uri dbp:nickname res:Scarface .
}
"
qald-3,test,78,"
Was Margaret Thatcher a chemist?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
ASK 
WHERE {
	res:Margaret_Thatcher dbo:profession res:Chemist .
}
"
qald-3,test,79,"
Was Dutch Schultz a jew?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
	res:Dutch_Schultz dbp:ethnicity 'Jewish'@en .
}
"
qald-3,test,80,"
Give me all books by William Goldman with more than 300 pages.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:Book .
	?uri dbo:author res:William_Goldman .
        ?uri dbo:numberOfPages ?x .
        FILTER (?x > 300)
}
"
qald-3,test,81,"
Which books by Kerouac were published by Viking Press?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	?uri rdf:type dbo:Book .
	?uri dbo:publisher res:Viking_Press .
        ?uri dbo:author res:Jack_Kerouac .
}
"
qald-3,test,82,"
Give me a list of all American inventions.
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	?uri rdf:type yago:AmericanInventions .
}
"
qald-3,test,83,"
How high is the Mount Everest?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?num 
WHERE {
	res:Mount_Everest dbo:elevation ?num.
}
"
qald-3,test,84,"
Who created the comic Captain America?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Captain_America dbo:creator ?uri .
}
"
qald-3,test,85,"
How many people live in the capital of Australia?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?num 
WHERE {
	res:Australia dbo:capital ?x .
        ?x dbo:populationTotal ?num .
}
"
qald-3,test,86,"
What is the largest city in Australia?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Australia dbo:largestCity ?uri .
}
"
qald-3,test,87,"
Who composed the music for Harold and Maude?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri 
WHERE {
	res:Harold_and_Maude dbo:musicComposer ?uri .
}
"
qald-3,test,88,"
Which films starring Clint Eastwood did he direct himself?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	?uri dbo:director res:Clint_Eastwood .
        ?uri dbo:starring res:Clint_Eastwood .
}
"
qald-3,test,89,"
In which city was the former Dutch queen Juliana buried?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	res:Juliana_of_the_Netherlands dbo:restingPlace ?uri.
	?uri rdf:type dbo:Settlement .
}
"
qald-3,test,90,"
Where is the residence of the prime minister of Spain?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Prime_Minister_of_Spain dbp:residence ?uri .
}
"
qald-3,test,91,"
Which U.S. state has the abbreviation MN?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	?uri rdf:type yago:StatesOfTheUnitedStates .
        ?uri dbp:postalabbreviation 'MN'@en .
}
"
qald-3,test,92,"
Show me all songs from Bruce Springsteen released between 1980 and 1990.
","
PREFIX dbo:  <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
        ?uri rdf:type dbo:Song .
        ?uri dbo:artist res:Bruce_Springsteen .
        ?uri dbo:releaseDate ?date . 
        FILTER (?date >= '1980-01-01'^^xsd:date && ?date <= '1990-12-31'^^xsd:date)
}
"
qald-3,test,93,"
Which movies did Kurosawa direct after Rashomon?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE {
	?uri rdf:type dbo:Film .
        ?uri dbo:director res:Akira_Kurosawa .
	{ ?uri dbo:releaseDate ?x . } UNION { ?uri dbp:released ?x . }
        <http://dbpedia.org/resource/Rashomon_(film)> dbo:releaseDate ?y .
        FILTEr (?y > ?x)
}
"
qald-3,test,94,"
What is the founding year of the brewery that produces Pilsner Urquell?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?num 
WHERE {
	res:Pilsner_Urquell dbp:brewery ?uri .
	?uri dbp:foundation ?num .
}
"
qald-3,test,95,"
Who wrote the lyrics for the Polish national anthem?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Poland dbo:anthem ?x .
        ?x dbp:author ?uri .
}
"
qald-3,test,96,"
Give me all B-sides of the Ramones. 
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?string 
WHERE {
	?x dbo:musicalArtist res:Ramones .
        ?x dbp:bSide ?string . 
}
"
qald-3,test,97,"
Who painted The Storm on the Sea of Galilee?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:The_Storm_on_the_Sea_of_Galilee dbp:artist ?uri .
}
"
qald-3,test,98,"
Which country does the creator of Miffy come from?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Miffy dbo:creator ?x .
	?x dbo:nationality ?uri .
}
"
qald-3,test,99,"
For which label did Elvis record his first album?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri 
WHERE {
	?x rdf:type dbo:Album .
	?x dbo:artist res:Elvis_Presley .
	?x dbo:releaseDate ?y .
	?x dbo:recordLabel ?uri .
}
ORDER BY ASC(?y) LIMIT 1
"
qald-3,test,100,"
Who produces Orangina?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	?uri dbo:product res:Orangina .
}
"
qald-5,test,51,"Where was the ""Father of Singapore"" born?", 
qald-5,test,52,Which Secretary of State was significantly involved in the United States' dominance of the Caribbean?, 
qald-5,test,53,Who is the architect of the tallest building in Japan?, 
qald-5,test,54,What is the name of the Viennese newspaper founded by the creator of the croissant?, 
qald-5,test,55,In which city where Charlie Chaplin's half brothers born?, 
qald-5,test,56,Which German mathematicians were members of the von Braun rocket group?, 
qald-5,test,57,Which writers converted to Islam?, 
qald-5,test,58,Are there man-made lakes in Australia that are deeper than 100 meters?, 
qald-5,test,59,Which movie by the Coen brothers stars John Turturro in the role of a New York City playwright?, 
qald-5,test,60,Which of the volcanoes that erupted in 1550 is still active?, 
qald-2,train,1,"
Give me all female Russian astronauts.
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type yago:RussianCosmonauts .
        ?uri rdf:type yago:FemaleAstronauts .
        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-2,train,2,"
Give me the birthdays of all actors of the television show Charmed.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date 
WHERE { 
	res:Charmed dbo:starring ?actor .
        ?actor dbo:birthDate ?date .
}
"
qald-2,train,7,"
Is the wife of president Obama called Michelle?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
ASK 
WHERE {
        res:Barack_Obama dbo:spouse ?spouse .
        ?spouse rdfs:label ?name .
        FILTER(regex(?name,'Michelle')) 
}
"
qald-2,train,11,"
Which countries have places with more than two caves?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {       
        ?cave rdf:type dbo:Cave . 
        ?cave dbo:location ?uri .
        ?uri rdf:type dbo:Country .
        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
} 
GROUP BY ?uri ?string
HAVING (COUNT(?cave) > 2)
"
qald-2,train,16,"
Give me the capitals of all countries in Africa.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string
WHERE { 
	?states rdf:type yago:AfricanCountries .
        ?states dbo:capital ?uri .
        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-2,train,20,"
How many employees does IBM have?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?number 
WHERE {
	res:IBM dbo:numberOfEmployees ?number .
}
"
qald-2,train,21,"
Which states border Illinois?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
      res:Illinois dbp:borderingstates ?uri .
      OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') . }
}
"
qald-2,train,28,"
Which European countries have a constitutional monarchy?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type yago:EuropeanCountries .
        ?uri dbo:governmentType res:Constitutional_monarchy .
        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-2,train,29,"
Which awards did WikiLeaks win?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
        res:WikiLeaks dbp:awards ?uri .
        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-2,train,30,"
Which state of the USA has the highest population density?
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type yago:StatesOfTheUnitedStates .
        ?uri dbp:densityrank ?rank .
        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
} 
ORDER BY ASC(?rank) LIMIT 1
"
qald-2,train,37,"
When did Finland join the EU?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?date 
WHERE {       
        res:Finland dbp:accessioneudate ?date .      
}
"
qald-2,train,40,"
What is the highest mountain in Australia?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type dbo:Mountain .
        ?uri dbo:locatedInArea res:Australia .
        ?uri dbo:elevation ?elevation .
        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
} 
ORDER BY DESC(?elevation) LIMIT 1
"
qald-2,train,46,"
Is Frank Herbert still alive?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
	res:Frank_Herbert dbo:deathDate ?date .
        FILTER (!BOUND(?date))
}
"
qald-2,train,49,"
Give me all companies in the advertising industry.
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE { 
	?uri rdf:type dbo:Company  .
        ?uri dbp:industry ?industry .
        FILTER regex(?industry,'advertising','i') .
        OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,51,"
Give me all school types.
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE { 
	?uri rdf:type yago:SchoolTypes .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,52,"
Which presidents were born in 1945?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	{ ?uri rdf:type dbo:President . }
	UNION
	{ ?uri rdf:type yago:Presidents . }
        ?uri dbo:birthDate ?date .
	FILTER regex(?date, '^1945') .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,53,"
Give me all presidents of the United States.
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
        ?uri rdf:type dbo:Person .
        { ?uri rdf:type yago:PresidentsOfTheUnitedStates. }
        UNION
        { ?uri rdf:type dbo:President.
          ?uri dbp:title res:President_of_the_United_States. }
        ?uri rdfs:label ?string. 
        FILTER (lang(?string) = 'en' && !regex(?string,'Presidency','i') && !regex(?string,'and the')) .
}
"
qald-2,train,54,"
Who was the wife of U.S. president Lincoln?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	res:Abraham_Lincoln dbo:spouse ?uri.
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,55,"
Who developed the video game World of Warcraft?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	res:World_of_Warcraft dbo:developer ?uri . 
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,56,"
What is the official website of Tom Cruise?
","
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?string 
WHERE { 
	res:Tom_Cruise foaf:homepage ?string .
}
"
qald-2,train,57,"
List all episodes of the first season of the HBO television series The Sopranos!
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri dbo:series res:The_Sopranos  .
        ?uri dbo:seasonNumber 1 .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,58,"
Who produced the most films?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?film rdf:type dbo:Film .
        ?film dbo:producer ?uri .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
} 
ORDER BY DESC(COUNT(?film)) LIMIT 1
"
qald-2,train,59,"
Give me all people with first name Jimmy.
","
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type foaf:Person.       
        ?uri foaf:givenName 'Jimmy'@en   .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,60,"
Is there a video game called Battle Chess?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
ASK 
WHERE {
	?uri rdf:type dbo:VideoGame .
        ?uri rdfs:label 'Battle Chess'@en .
}
"
qald-2,train,61,"
Which mountains are higher than the Nanga Parbat?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
        res:Nanga_Parbat dbp:elevationM ?elevation .
	?uri rdf:type dbo:Mountain .
        ?uri dbp:elevationM ?otherelevation .
        FILTER (?otherelevation > ?elevation) .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,62,"
Who created Wikipedia?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	res:Wikipedia dbo:author ?uri .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,63,"
Give me all actors starring in Batman Begins.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	res:Batman_Begins dbo:starring ?uri .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') } 
}
"
qald-2,train,64,"
Which software has been developed by organizations founded in California?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE { 
	?company rdf:type dbo:Organisation  .
        ?company dbo:foundationPlace res:California .
        ?uri dbo:developer ?company .
        ?uri rdf:type dbo:Software .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,65,"
Which companies work in the aerospace industry as well as on nuclear reactor technology?
","
PREFIX dbo:  <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE { 
	?uri rdf:type dbo:Company  .
	?uri dbp:industry res:Aerospace .
        ?uri dbp:industry res:Nuclear_reactor_technology .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,66,"
Is Christian Bale starring in Batman Begins?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE {
	res:Batman_Begins dbo:starring res:Christian_Bale .
}
"
qald-2,train,67,"
Give me the websites of companies with more than 500000 employees.
","
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?string 
WHERE {
	?subject rdf:type dbo:Company .
	?subject dbp:numEmployees ?employees .
	FILTER( xsd:integer(?employees) > 500000 ) .
	?subject foaf:homepage ?string .
}
"
qald-2,train,68,"
Which actors were born in Germany?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
  ?uri rdf:type dbo:Actor .
  { ?uri dbo:birthPlace res:Germany . }
  UNION 
  { ?uri dbo:birthPlace ?place .
    ?place dbo:country res:Germany . }
  OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,69,"
Which caves have more than 3 entrances?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE { 
	?uri rdf:type dbo:Cave .
        ?uri dbo:numberOfEntrances ?entrance .
        FILTER (?entrance > 3) .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,70,"
Give me all films produced by Hal Roach.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type dbo:Film .
        ?uri dbo:producer res:Hal_Roach .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,71,"
Give me all video games published by Mean Hamster Software.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
      ?uri rdf:type dbo:VideoGame .
      { ?uri dbp:publisher 'Mean Hamster Software'@en . }
      UNION 
      { ?uri dbo:publisher res:Mean_Hamster_Software . }
      OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,72,"
Which languages are spoken in Estonia?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE { 
      { res:Estonia dbo:language ?uri . } 
      UNION 
      { ?uri dbo:spokenIn res:Estonia . }
      OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,73,"
Who owns Aldi?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	res:Aldi dbo:keyPerson ?uri .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,74,"
Which capitals in Europe were host cities of the summer olympic games?
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type yago:CapitalsInEurope .
        ?uri rdf:type yago:HostCitiesOfTheSummerOlympicGames .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') } 
}
"
qald-2,train,75,"
Who has been the 5th president of the United States of America?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri dbo:orderInOffice '5th President of the United States'@en .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,76,"
How many films did Hal Roach produce?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
SELECT COUNT(DISTINCT ?uri) 
WHERE {
      ?uri dbo:producer res:Hal_Roach .
}
"
qald-2,train,77,"
Which music albums contain the song Last Christmas?
","
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
        ?single dbo:album ?uri .
        ?single foaf:name 'Last Christmas'@en .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,78,"
Give me all books written by Danielle Steel.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type dbo:Book .
        ?uri dbo:author res:Danielle_Steel .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,79,"
Which airports are located in California, USA?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE { 
	?uri rdf:type dbo:Airport .
        ?uri dbo:location res:California .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,80,"
Give me all Canadian Grunge record labels.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type dbo:RecordLabel .
        ?uri dbo:genre res:Grunge .
        ?uri dbo:country res:Canada .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') } 
}
"
qald-2,train,81,"
Which country has the most official languages?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string WHERE
{ 
	?uri rdf:type dbo:Country  .
        ?uri dbp:officialLanguages ?language .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }		     
} 
ORDER BY DESC(COUNT(?language)) LIMIT 1
"
qald-2,train,82,"
In which programming language is GIMP written?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE { 
	res:GIMP dbo:programmingLanguage ?uri .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,83,"
Who produced films starring Natalie Portman?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?film rdf:type dbo:Film .
        ?film dbo:starring res:Natalie_Portman .
        ?film dbo:producer ?uri .
	OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,84,"
Give me all movies with Tom Cruise.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type dbo:Film.
	?uri dbo:starring res:Tom_Cruise .
	OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,85,"
In which films did Julia Roberts as well as Richard Gere play?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type dbo:Film .
        ?uri dbo:starring res:Julia_Roberts .
        ?uri dbo:starring res:Richard_Gere.
	OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,86,"
Give me all female German chancellors.
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type yago:FemaleHeadsOfGovernment.
        ?uri dbp:office res:Chancellor_of_Germany .
        OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,87,"
Who wrote the book The pillars of the Earth?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	res:The_Pillars_of_the_Earth dbo:author ?uri .
	OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,88,"
How many films did Leonardo DiCaprio star in?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT COUNT(DISTINCT ?uri) 
WHERE {
	?uri rdf:type dbo:Film .
        ?uri dbo:starring res:Leonardo_DiCaprio . 
}
"
qald-2,train,89,"
Give me all soccer clubs in the Premier League.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE { 
   ?uri dbo:league res:Premier_League . 
   OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,90,"
When was Capcom founded?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?date 
WHERE {
     res:Capcom dbp:foundation ?date .
}
"
qald-2,train,91,"
Which organizations were founded in 1950?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE {
	?uri rdf:type dbo:Organisation .
        { ?uri dbp:foundation ?date . } UNION { ?uri dbo:formationYear ?date . }
        FILTER regex(?date,'^1950') .
	OPTIONAL { ?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-2,train,92,"
What is the highest mountain?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string 
WHERE { 
	?uri rdf:type dbo:Mountain  .
        ?uri dbo:elevation ?elevation .
        OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
} 
ORDER BY DESC(?elevation) LIMIT 1
"
qald-2,train,93,"
Was Natalie Portman born in the United States?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK 
WHERE { 
	res:Natalie_Portman dbo:birthPlace ?city .
      	?city dbo:country res:United_States .
}
"
qald-2,train,94,"
Which budget did the first movie of Zdenek Sverak have?
","
OUT OF SCOPE
"
qald-2,train,95,"
How many big fires struck Paris during the Middle Ages?
","
OUT OF SCOPE
"
qald-2,train,96,"
Is Jens Friebe a vegan?
","
OUT OF SCOPE
"
qald-2,train,97,"
How often was Michael Jordan divorced?
","
OUT OF SCOPE
"
qald-2,train,98,"
What is the most beautiful painting?
","
OUT OF SCOPE
"
qald-2,train,99,"
Give me all animal species that live in the Teutoburg Forest.
","
OUT OF SCOPE
"
qald-2,train,100,"
When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?
","
OUT OF SCOPE
"
qald-8,test,5,What are the top selling luxury vehicle brands in Germany?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> SELECT ?company WHERE { ?company dct:subject dbc:Car_manufacturers_of_Germany ; dbo:equity ?equity ; dbo:netIncome ?netIncome ; dbo:production ?production ; dbo:revenue ?revenue } ORDER BY DESC(?equity)'}
qald-8,test,6,How many awards has Bertrand Russell?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT (COUNT(?Awards) AS ?Counter) WHERE { dbr:Bertrand_Russell dbp:awards ?Awards }'}
qald-8,test,7,Who is Dan Jurafsky?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Dan WHERE {  VALUES ?Dan {dbr:Daniel_Jurafsky } }'}
qald-8,test,13,Who are the founders of  BlaBlaCar?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?founder WHERE { dbr:BlaBlaCar dbp:founders ?founder }'}
qald-8,test,15,how many foreigners speak German?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?Ger_lang WHERE { dbr:German_language dbp:speakers ?Ger_lang } OFFSET 1 LIMIT 1'}
qald-8,test,18,How much is the population of Mexico City ?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Mexico_City WHERE { dbr:Mexico_City dbo:populationTotal ?Mexico_City }'}
qald-8,test,19,What is the nick name of Baghdad?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX foaf: <http://xmlns.com/foaf/0.1/> SELECT ?nm WHERE { dbr:Baghdad foaf:nick ?nm }'}
qald-8,test,20,Who is the novelist of the work a song of ice and fire?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?Novelist WHERE { dbr:A_Song_of_Ice_and_Fire dbp:author ?Novelist }'}
qald-8,test,21,What is the percentage of area water in Brazil?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?percentage WHERE { dbr:Brazil dbo:percentageOfAreaWater ?percentage }'}
qald-8,test,22,How much is the population of Iraq?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?pIraq WHERE { dbr:Iraq dbo:populationTotal ?pIraq }'}
qald-8,test,25,How much is the population density rank of Germany?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?rank WHERE { dbr:Germany dbp:populationDensityRank ?rank }'}
qald-8,test,26,What is the relation between Resource Description Framework and Web Ontology Language?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?rdf_owl WHERE { dbr:Web_Ontology_Language dbo:abstract ?rdf_owl } LIMIT 1'}
qald-8,test,27,How large is the total area of North Rhine-Westphalia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?tarea WHERE { dbr:North_Rhine-Westphalia dbo:areaTotal ?tarea }'}
qald-8,test,28,What is the original title of the interpretation of dreams?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX foaf: <http://xmlns.com/foaf/0.1/> SELECT ?title WHERE { dbr:The_Interpretation_of_Dreams foaf:name ?title }'}
qald-8,test,35,Which beer brewing comapnies are located in North-Rhine Westphalia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?company WHERE { ?company dct:subject dbc:Companies_based_in_North_Rhine-Westphalia ; rdf:type dbo:Brewery }'}
qald-8,test,38,What is the highest mountain in the Bavarian Alps?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?m  WHERE { dbr:Bavarian_Alps dbp:highest ?m} '}
qald-8,test,41,Where is the most deep point in the ocean?,"{'sparql': 'PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?point WHERE { dbr:Extreme_points_of_Earth dct:subject ?x . ?point dct:subject ?x ; rdfs:comment ?comment FILTER ( lang(?comment) = ""en"" ) } OFFSET 13 LIMIT 1'}"
qald-7,train,210,Which professional surfers were born on the Philippines?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri\nWHERE {\n\t?uri dbo:occupation res:Surfing .\n\t?uri dbo:birthPlace res:Philippines .\n}'}
qald-4,test,14,What is the most frequent death cause?,"
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?x
WHERE {
        ?uri dbo:deathCause ?x . 
}
ORDER BY DESC(COUNT(DISTINCT ?uri)) 
OFFSET 0 LIMIT 1
"
qald-4,test,48,What does CPU stand for?,"
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
        ?uri dbo:abbreviation ""CPU""@en .
} 

"
qald-8,train,180,Are there any castles in the United States?,{'sparql': 'PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> ASK WHERE { ?uri dct:subject dbc:Castles_in_the_United_States }'}
qald-8,train,181,Can you find frescoes in Crete?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { ?uri dct:subject dbc:Minoan_frescos ; dbp:museum ?museum . ?museum dbo:location dbr:Crete }'}
qald-8,train,184,How many years was the Ford Model T manufactured?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX res: <http://dbpedia.org/resource/> SELECT (( year(xsd:date(?end)) - year(xsd:date(?start)) ) AS ?years) WHERE { res:Ford_Model_T dbo:productionEndYear ?end ; dbo:productionStartYear ?start }'}
qald-8,train,185,Give me all gangsters from the prohibition era.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Gangster ; dct:subject dbc:Prohibition-era_gangsters }'}
qald-8,train,186,Give me all Seven Wonders of the Ancient World.,{'sparql': 'PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> SELECT ?uri WHERE { ?uri dct:subject dbc:Seven_Wonders_of_the_Ancient_World }'}
qald-8,train,187,Give me all chemical elements.,{'sparql': 'PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX owl: <http://www.w3.org/2002/07/owl#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type owl:Thing ; dct:subject dbc:Chemical_elements }'}
qald-8,train,188,How many rivers and lakes are in South Carolina?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(DISTINCT ?uri) AS ?count) WHERE { { ?uri dbo:location dbr:South_Carolina ; rdf:type dbo:Lake } UNION { ?uri dct:subject dbc:Rivers_and_streams_of_South_Carolina } }'}
qald-8,train,192,Is Pluto really a planet?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { dbr:Pluto rdf:type dbo:Planet }'}
qald-8,train,195,What is the largest state in the United States?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dct:subject dbc:States_of_the_United_States ; rdf:type dbo:AdministrativeRegion ; dbo:areaTotal ?area } ORDER BY DESC(?area) OFFSET 0 LIMIT 1'}
qald-8,train,198,What is the wavelength of indigo?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?n WHERE { dbr:Indigo dbo:wavelength ?n }'}
qald-8,train,199,What was the name of the famous battle in 1836 in San Antonio?,"{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri rdf:type dbo:MilitaryConflict ; dbo:place dbr:San_Antonio ; dbo:date ?date FILTER ( ?date > ""1835-12-31T00:00:00Z""^^xsd:dateTime ) FILTER ( ?date <= ""1836-12-31T00:00:00Z""^^xsd:dateTime ) }'}"
qald-8,train,200,What were the names of the three ships used by Columbus?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Ship ; dct:subject dbc:Christopher_Columbus ; dct:subject dbc:Exploration_ships }'}
qald-8,train,201,When did Muhammad die?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Muhammad dbo:deathDate ?date }'}
qald-8,train,202,When was the De Beers company founded?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:De_Beers dbo:foundingYear ?date }'}
qald-8,train,204,Which American presidents were in office during the Vietnam War?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> SELECT DISTINCT ?uri WHERE { res:Vietnam_War dbo:commander ?uri . ?uri dct:subject dbc:Presidents_of_the_United_States }'}
qald-8,train,207,Who assassinated President McKinley?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Person ; dct:subject dbc:American_assassins ; dct:subject dbc:Assassination_of_William_McKinley }'}
qald-8,train,209,Who killed Caesar?,{'sparql': 'PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> SELECT DISTINCT ?uri WHERE { ?uri dct:subject dbc:Assassins_of_Julius_Caesar }'}
qald-8,train,214,How big is the earth's diameter?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT (( xsd:double(?radius) * 2 ) AS ?diameter) WHERE { res:Earth dbo:meanRadius ?radius }'}
qald-3,train,3,"
Who is the daughter of Ingrid Bergman married to?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri
WHERE {
        res:Ingrid_Bergman dbo:child ?child .
        ?child dbo:spouse ?uri .
}
"
qald-3,train,6,"
In which city did John F. Kennedy die?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri
WHERE { 
        res:John_F._Kennedy dbo:deathPlace ?uri .
        ?uri rdf:type dbo:City .
}
"
qald-3,train,13,"
Which classis do tree frogs belong to?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri
WHERE {
       res:Hylidae dbp:classis ?uri .
}
"
qald-3,train,37,"
When did Latvia join the EU?
","
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT DISTINCT ?date 
WHERE {       
        res:Latvia dbp:accessioneudate ?date .      
}
"
qald-3,train,63,"
Give me all actors starring in Last Action Hero.
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:Last_Action_Hero dbp:starring ?uri .
}
"
qald-3,train,87,"
Who wrote the book Les Piliers de la terre?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri 
WHERE {
	res:The_Pillars_of_the_Earth dbo:author ?uri .
}
"
qald-2,test,22,"
Who is the governor of Texas?
","
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT DISTINCT ?uri ?string WHERE 
{
        res:Texas dbp:governor ?string .
        ?uri foaf:name ?string.
}
"
qald-2,test,23,"
Do Harry and William, Princes of Wales, have the same mother?
","
PREFIX dbp: <http://dbpedia.org/property/>
ASK WHERE 
{       
        <http://dbpedia.org/resource/Prince_William,_Duke_of_Cambridge> dbp:mother ?x .  
	<http://dbpedia.org/resource/Prince_Harry_of_Wales> dbp:mother ?y . 
	FILTER (?x = ?y)
}
"
qald-2,test,35,"
Who developed Skype?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res:  <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string WHERE 
{
	res:Skype dbo:developer ?uri .
	OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-2,test,40,"
List all boardgames by GMT.
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?uri ?string WHERE 
{	
        ?uri dbo:publisher res:GMT_Games .
	OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-2,test,72,"
In which U.S. state is Area 51 located?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string WHERE 
{
	res:Area_51 dbo:location ?uri .
        ?uri dbo:country res:United_States .
        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-2,test,91,"
Which U.S. State has the abbreviation MN?
","
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?uri ?string WHERE 
{
	?uri rdf:type yago:StatesOfTheUnitedStates .
        ?uri dbp:postalabbreviation 'MN'@en .
	OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-2,test,93,"
Which movies did Sam Raimi direct after Army of Darkness?
","
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?uri ?string WHERE
{
	?uri rdf:type dbo:Film .
	?uri dbo:director res:Sam_Raimi .
	{ ?uri dbo:releaseDate ?x . } UNION { ?uri dbp:released ?x . }
	res:Army_of_Darkness dbo:releaseDate ?y .
	FILTER (?x > ?y)
	OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-9,test,86,What is the highest mountain in Germany?,{'sparql': 'PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX onto: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri rdf:type onto:Mountain ; onto:elevation ?elevation ; onto:locatedInArea <http://dbpedia.org/resource/Germany> } ORDER BY DESC(?elevation) LIMIT 1'}
qald-9,test,64,What is the profession of Frank Herbert?,{'sparql': 'PREFIX dbpedia2: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?string WHERE { res:Frank_Herbert dbpedia2:occupation ?string }'}
qald-9,test,6,Are Taiko some kind of Japanese musical instrument?,{'sparql': 'ASK WHERE { <http://dbpedia.org/resource/Taiko> a <http://dbpedia.org/class/yago/WikicatJapaneseMusicalInstruments> }'}
qald-9,test,44,Which European countries have a constitutional monarchy?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dct:subject dbc:Countries_in_Europe ; dbo:governmentType dbr:Constitutional_monarchy }'}
qald-9,test,32,What is Angela Merkel’s birth name?,{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?string WHERE { res:Angela_Merkel dbp:birthName ?string }'}
qald-9,test,29,Which countries in the European Union adopted the Euro?,"{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> } UNION { ?uri <http://dbpedia.org/property/currencyCode> ""EUR""@en } }'}"
qald-9,test,23,Which software has been published by Mean Hamster Software?,"{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX onto: <http://dbpedia.org/ontology/> PREFIX prop: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Software { ?uri prop:publisher ""Mean Hamster Software""@en } UNION { ?uri onto:publisher res:Mean_Hamster_Software } }'}"
qald-9,test,210,Which monarchs of the United Kingdom were married to a German?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatMonarchsOfTheUnitedKingdom ; dbo:spouse ?spouse . ?spouse dbo:birthPlace res:Germany }'}
qald-9,test,199,Give me all Argentine films.,"{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { { ?uri rdf:type yago:ArgentineFilms } UNION { ?uri rdf:type dbo:Film { ?uri dbo:country res:Argentina } UNION { ?uri dbp:country ""Argentina""@en } } }'}"
qald-9,test,196,Which classes does the Millepede belong to?,{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?String WHERE { res:Millipede dbp:taxon ?String }'}
qald-9,test,188,Give me the homepage of Forbes.,{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX foaf: <http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?string WHERE { res:Forbes foaf:homepage ?string }'}
qald-9,test,62,What is the highest place of Karakoram?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Karakoram dbp:highest ?uri }'}
qald-9,test,173,When did Finland join the EU?,{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?date WHERE { res:Finland dbp:accessioneudate ?date }'}
qald-9,test,128,Who is the author of WikiLeaks?,{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX onto: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { res:WikiLeaks onto:author ?uri }'}
qald-9,test,126,Sean Parnell was the governor of which U.S. state?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Sean_Parnell dbo:region ?uri }'}
qald-9,test,122,Who was the wife of President Lincoln?,{'sparql': 'PREFIX dbr: <http://dbpedia.org/resource/> PREFIX onto: <http://dbpedia.org/ontology/> SELECT ?uri ?string WHERE { dbr:Abraham_Lincoln onto:spouse ?uri }'}
qald-9,test,10,How many students does the Free University of Amsterdam have?,{'sparql': 'SELECT DISTINCT ?num WHERE { dbr:Vrije_Universiteit_Amsterdam <http://dbpedia.org/ontology/numberOfStudents> ?num }'}
qald-9,test,1,What is the revenue of IBM?,{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX onto: <http://dbpedia.org/ontology/> SELECT ?number WHERE { res:IBM onto:revenue ?number }'}
qald-9,test,178,How many James Bond movies do exist?,{'sparql': 'SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri dct:subject <http://dbpedia.org/resource/Category:James_Bond_films> }'}
qald-9,test,183,Who was Tom Hanks married to?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { dbr:Tom_Hanks dbo:spouse ?uri }'}
qald-9,test,21,Who created English Wikipedia?,{'sparql': 'PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX onto: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Wikipedia> onto:author ?uri }'}
qald-9,test,34,Give me all female German chancellors.,{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Chancellor_of_Germany dbp:incumbent ?uri }'}
qald-9,test,145,Who owns Aldi?,{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Aldi dbp:founders ?uri }'}
qald-9,test,154,Which books were written by Danielle Steel?,{'sparql': 'PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX onto: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri rdf:type onto:Book ; onto:author <http://dbpedia.org/resource/Danielle_Steel> }'}
qald-9,test,211,Give me all American presidents of the last 20 years.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Person ; dct:subject dbc:Presidents_of_the_United_States ; dbo:activeYearsEndDate ?termEnd FILTER ( ( year(now()) - year(?termEnd) ) <= 20 ) }'}
qald-9,test,131,What languages are spoken in Pakistan?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pakistan> <http://dbpedia.org/ontology/language> ?uri }'}
qald-9,test,120,Who is the daughter of Bill Clinton married to?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbr:Bill_Clinton dbo:child ?child . ?child dbo:spouse ?uri . ?uri rdfs:label ?string }'}
qald-9,test,88,What is the wavelength of Indigo?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?n WHERE { dbr:Indigo dbo:wavelength ?n }'}
qald-9,test,207,Which daughters of British earls died at the same place they were born at?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatDaughtersOfBritishEarls ; dbo:birthPlace ?x ; dbo:deathPlace ?y FILTER ( ?x = ?y ) }'}
qald-9,test,165,What is the name of the university where Obama's wife studied?,{'sparql': 'SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Barack_Obama> <http://dbpedia.org/ontology/spouse> ?x . ?x <http://dbpedia.org/ontology/almaMater> ?s }'}
qald-9,test,108,When did Paraguay proclaim its independence?,{'sparql': 'SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Paraguay> <http://dbpedia.org/ontology/foundingDate> ?date }'}
qald-9,test,9,In which city is the headquarter of Air China?,{'sparql': 'SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_China> <http://dbpedia.org/ontology/headquarter> ?uri . ?uri a <http://dbpedia.org/class/yago/City108524735> }'}
qald-9,test,92,Is the wife of President Obama called Michelle?,"{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX onto: <http://dbpedia.org/ontology/> ASK WHERE { res:Barack_Obama onto:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, ""Michelle"") }'}"
qald-9,test,60,Who is the governor of Texas?,{'sparql': 'PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?string WHERE { res:Texas dbp:governor ?string }'}
qald-9,test,97,Give me the official websites of actors of the television show Charmed.,{'sparql': 'PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX onto: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charmed> onto:starring ?actors . ?actors foaf:homepage ?uri }'}
qald-9,test,169,Give me all libraries established before 1400.,{'sparql': 'SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/property/established> ?year FILTER ( ?year < 1400 ) }'}
qald-9,test,38,Give me all Frisian islands that belong to the Netherlands.,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatFrisianIslands ; dbo:country res:Netherlands }'}
qald-9,test,152,Which beer brewing companies are located in North-Rhine Westphalia?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?company WHERE { ?company dct:subject dbc:Companies_based_in_North_Rhine-Westphalia ; rdf:type dbo:Brewery }'}
qald-9,test,179,What were the names of the three ships by Columbus?,{'sparql': 'PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Ship ; dct:subject dbc:Christopher_Columbus ; dct:subject dbc:Exploration_ships }'}
qald-7,test,7,Give me all American presidents in the last 20 years.,{'sparql': 'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dbp: <http://dbpedia.org/property/> select distinct ?uri where { ?uri rdf:type dbo:Person . ?uri dct:subject dbc:Presidents_of_the_United_States . ?uri dbp:termEnd ?termEnd . FILTER(year(NOW()) - year(?termEnd) <= 20) }'}
qald-7,test,28,What were the original 13 British colonies?,{'sparql': 'PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbc: <http://dbpedia.org/resource/Category:> select distinct ?uri where { ?uri dct:subject dbc:Former_British_colonies. ?uri dct:subject dbc:Thirteen_Colonies. }'}
qald-1,train,1,"
Who are the presidents of the United States?
","
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX prop: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri ?string
WHERE 
{
        {
          ?uri rdf:type yago:PresidentsOfTheUnitedStates.         
        }
        UNION
        { 
          ?uri rdf:type onto:President.
          ?uri prop:title res:President_of_the_United_States.
        }
        OPTIONAL {?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }
}
"
qald-1,train,10,"
Who was the wife of President Lincoln?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX onto: <http://dbpedia.org/ontology/>
SELECT ?uri ?string
WHERE 
{
	?person rdf:type onto:President .
	?person foaf:surname 'Lincoln'@en .
	?person onto:spouse ?uri.
        OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,29,"
What is the official website of Tom Hanks?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?uri
WHERE
{ 
	?subject  rdfs:label 'Tom Hanks'@en .
        ?subject foaf:homepage ?uri
}
"
qald-1,train,8,"
Which people have as their given name Jimmy?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT DISTINCT ?uri ?string
WHERE 
{
	?uri rdf:type foaf:Person.       
        ?uri foaf:givenName 'Jimmy'@en   .
        OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,27,"
Who created English Wikipedia?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?uri ?string
WHERE 
{
	?website rdf:type onto:Website .
        ?website onto:author ?uri .
        ?website rdfs:label 'English Wikipedia'@en .
        OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,20,"
Which country does the Airedale Terrier come from?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX prop: <http://dbpedia.org/property/>
SELECT ?string
WHERE 
{
	?dog rdfs:label 'Airedale Terrier'@en .
        ?dog prop:country ?string      
}
"
qald-1,train,22,"
Which birds are there in the United States?
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?uri ?string
WHERE 
{
	?uri rdf:type yago:BirdsOfTheUnitedStates.
        OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,46,"
Give me all European Capitals!
","
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?uri ?string
WHERE 
{ 
	?uri rdf:type yago:CapitalsInEurope.
	OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,13,"
Which cities have more than 2 million inhabitants?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX prop: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX onto: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri ?string
WHERE 
{ 
	?uri rdf:type onto:City.
      { ?uri prop:population ?population. } 
        UNION 
      { ?uri prop:populationUrban ?population. }
	FILTER (xsd:integer(?population) > 2000000) .
	OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,4,"
Who was Tom Hanks married to?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX prop: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri ?string
WHERE 
{
      ?person rdfs:label 'Tom Hanks'@en .
      ?person prop:spouse ?string .
      OPTIONAL { ?uri rdfs:label ?string . }
}
"
qald-1,train,26,"
When was DBpedia released?
","
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?date
WHERE 
{
	?website rdf:type onto:Software .
        ?website onto:releaseDate ?date .
        ?website rdfs:label 'DBpedia'@en   
}
"
qald-1,train,5,"
Which people were born in Heraklion?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX yago: <http://dbpedia.org/class/yago/>
SELECT DISTINCT ?uri ?string
WHERE 
{
      ?uri rdf:type onto:Person .
      ?uri onto:birthPlace ?city .
      ?city rdfs:label 'Heraklion'@en
      OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,42,"
Which software has been published by Mean Hamster Software?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX prop: <http://dbpedia.org/property/>
PREFIX res:  <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri ?string
WHERE 
{
	?uri rdf:type onto:Software .
      { ?uri prop:publisher 'Mean Hamster Software'@en . }
      UNION 
      { ?uri onto:publisher res:Mean_Hamster_Software . }
	OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,18,"
What languages are spoken in Estonia?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX onto: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?uri ?string
WHERE 
{ 
      ?country rdf:type onto:Country.
      { ?country onto:language ?uri . } 
      UNION 
      { ?uri onto:spokenIn ?country . }
      FILTER (regex(?country, 'Estonia')).
      OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,19,"
Who is called Dana?
","
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX prop: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri ?string
WHERE 
{
      { ?uri rdf:type foaf:Person.        
        ?uri foaf:givenName 'Dana'@en. }
      UNION 
      { ?uri prop:alias ?alias . 
        FILTER regex(?alias,'Dana') . }
       OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }       
}
"
qald-1,train,38,"
Which books were written by Danielle Steel?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX onto: <http://dbpedia.org/ontology/>
SELECT ?uri ?string
WHERE 
{
	?uri rdf:type onto:Book .
        ?uri onto:author ?author .
        ?author foaf:name 'Danielle Steel'@en .
	OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,28,"
Which companies are located in California, USA?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT DISTINCT ?uri ?string
WHERE
{ 
	?uri rdf:type onto:Organisation .
        ?uri onto:location res:California .
        OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,25,"
Which genre does DBpedia belong to?
","
PREFIX prop: <http://dbpedia.org/property/>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?uri ?string
WHERE 
{
	?dbpedia rdf:type onto:Software .
        ?dbpedia onto:genre ?uri .
        ?dbpedia rdfs:label 'DBpedia'@en .
        OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') } 
}
"
qald-1,train,36,"
Give me all movies with Tom Cruise!
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX onto: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX prop: <http://dbpedia.org/property/>
SELECT DISTINCT ?uri ?string
WHERE 
{
	?uri rdf:type onto:Film.
	{ ?uri prop:starring res:Tom_Cruise . }
        UNION
        { ?uri onto:starring res:Tom_Cruise . }
	OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,3,"
Give me all female German chancellors!
","
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX yago: <http://dbpedia.org/class/yago/>
PREFIX prop: <http://dbpedia.org/property/>
SELECT ?uri ?string
WHERE 
{
	?uri rdf:type yago:FemaleHeadsOfGovernment.
        ?uri prop:office ?office .
        FILTER regex(?office, 'Chancellor of Germany').        
        OPTIONAL {?uri rdfs:label ?string . FILTER (lang(?string) = 'en') }
}
"
qald-1,train,47,"
Is Natalie Portman an actress?
","
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX onto: <http://dbpedia.org/ontology/>
ASK
WHERE 
{ 
	?subject rdf:type onto:Actor.
      	?subject rdfs:label 'Natalie Portman'@en.
}
"
